<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一刻笔记</title>
  <subtitle>带着一颗变态的、积极的心走向未来</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.dyike.com/"/>
  <updated>2016-04-15T07:22:43.000Z</updated>
  <id>http://www.dyike.com/</id>
  
  <author>
    <name>ityike</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>为什么要到hexo上搭建一个blog</title>
    <link href="http://www.dyike.com/2016/04/15/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%88%B0hexo%E4%B8%8A%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AAblog/"/>
    <id>http://www.dyike.com/2016/04/15/为什么要到hexo上搭建一个blog/</id>
    <published>2016-04-15T04:07:31.000Z</published>
    <updated>2016-04-15T07:22:43.000Z</updated>
    
    <content type="html">&lt;p&gt;以前的博客主要是用wordpress搭建的，用的服务器还是windows serve的服务器，说起来真的不好用，自从自己接触了开发，就慢慢的告别了windows系统，转向linux，OS X。久而久之就不想用wp来写文章，还有一个原因就是wp过于臃肿，还有很多插件压根就用不上，感觉这是一种资源的浪费，所以就放弃了，今后还是专心博客的内容。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;以前的博客主要是用wordpress搭建的，用的服务器还是windows serve的服务器，说起来真的不好用，自从自己接触了开发，就慢慢的告别了windows系统，转向linux，OS X。久而久之就不想用wp来写文章，还有一个原因就是wp过于臃肿，还有很多插件压根就用不
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>解决ssh的</title>
    <link href="http://www.dyike.com/2016/03/08/%E8%A7%A3%E5%86%B3s'sh/"/>
    <id>http://www.dyike.com/2016/03/08/解决s'sh/</id>
    <published>2016-03-08T01:23:41.000Z</published>
    <updated>2016-04-15T10:33:15.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;问题场景&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;服务器环境：阿里云 Linux CentOS 主机&lt;/p&gt;
&lt;p&gt;客户端：Mac OSX Terminal&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;问题现象&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;用 ssh 命令连接服务器之后，如果一段时间不操作，再次进入 Terminal 时会有一段时间没有响应，然后就出现错误提示：&lt;/p&gt;
&lt;p&gt;Write failed: Broken pipe&lt;/p&gt;
&lt;p&gt;只能重新用 ssh 命令进行连接。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解决方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;方法一：如果您有多台服务器，不想在每台服务器上设置，只需在客户端的 ~/.ssh/ 文件夹中添加 config 文件，并添加下面的配置：&lt;/p&gt;
&lt;p&gt;ServerAliveInterval 60&lt;/p&gt;
&lt;p&gt;方法二：如果您有多个人管理服务器，不想在每个客户端进行设置，只需在服务器的 /etc/ssh/sshd_config 中添加如下的配置：&lt;/p&gt;
&lt;p&gt;ClientAliveInterval 60&lt;/p&gt;
&lt;p&gt;方法三：如果您只想让当前的 ssh 保持连接，可以使用以下的命令：&lt;/p&gt;
&lt;p&gt;$ ssh -o ServerAliveInterval=60 user@sshserver&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;问题场景&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;服务器环境：阿里云 Linux CentOS 主机&lt;/p&gt;
&lt;p&gt;客户端：Mac OSX Terminal&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;问题现象&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;用 ssh 命令连接服务器之后，如果
    
    </summary>
    
    
      <category term="ssh" scheme="http://www.dyike.com/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>php7编译出现的问题</title>
    <link href="http://www.dyike.com/2016/01/02/php7%E7%BC%96%E8%AF%91%E5%87%BA%E7%9A%84%E9%94%99%E8%AF%AF/"/>
    <id>http://www.dyike.com/2016/01/02/php7编译出的错误/</id>
    <published>2016-01-02T10:15:13.000Z</published>
    <updated>2016-04-15T08:47:59.000Z</updated>
    
    <content type="html">&lt;p&gt;在编译安装php7时日志中有如下错误记录：&lt;br&gt;virtual memory exhausted: Cannot allocate memory&lt;br&gt;make: &lt;em&gt;*&lt;/em&gt; [ext/fileinfo/libmagic/apprentice.lo] Error 1&lt;/p&gt;
&lt;p&gt;开始时的解决方法是先将很多的进程关闭，比如httpd、ftpd、sendmail等等，释放出了一部分内存后，再进行编译，仍然得到同样的编译错误。后来百度谷歌了很久才找到解决问题的方法，而且是在php.net上找到的解决方法，原文链接是：https:  //bugs.php.net/bug.php?id=48809&lt;/p&gt;
&lt;p&gt;根据这个文章的方法将php安装配置文件中加了引号中的配置（不包括引号）“- -disable-fileinfo”后终于编译通过。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在编译安装php7时日志中有如下错误记录：&lt;br&gt;virtual memory exhausted: Cannot allocate memory&lt;br&gt;make: &lt;em&gt;*&lt;/em&gt; [ext/fileinfo/libmagic/apprentice.lo] Error
    
    </summary>
    
    
      <category term="PHP" scheme="http://www.dyike.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>2015年我的总结</title>
    <link href="http://www.dyike.com/2015/12/30/2015%E5%B9%B4%E6%80%BB%E7%BB%93/"/>
    <id>http://www.dyike.com/2015/12/30/2015年总结/</id>
    <published>2015-12-30T13:44:07.000Z</published>
    <updated>2016-04-15T10:15:03.000Z</updated>
    
    <content type="html">&lt;p&gt;写这个的时候是自己刚刚参加完研究生考试，说实话心里真的是一万个草泥马，这题也太难了，比去年的还要难。后来想想也不对，要难大家一起难嘛。再后来又听说了今年考研有政治英语泄题的事件，心里又开始不平衡了。哎，自己活得太真实……&lt;/p&gt;
&lt;p&gt;大概从什么时候开始喜欢写年度总结，这样说的话还是在上了大学之后，学了这个专业，好像就有了这个习惯，其实写文章让人记录很多事情，生活、工作、学习等等。就好像年末了这几天我就把自己机器的开发环境升级到php7，之前配置开发环境的时候，就是因为当初懒，没有记录当初踩的坑，这次也遇到了就是想不起上次怎么解决的，所以导致最后还要谷歌，重新再来一遍，这里面真的浪费很多时间。&lt;/p&gt;
&lt;p&gt;准确的说我是从什么时候有这个时间概念的，还是大二的时候，那时认识了一个名叫勾英达的小鲜肉，有一次一起在中关村那里吃饭，回去的路上，他一直计算着时间，说出来走到北大校门需要五分钟……其实这个算是一个小小的细节吧，后来我也意识到自己平时也不太注意时间这个概念，久而久之就能看出自己有拖延症的毛病。拖泥带水差不多就是这样形成。&lt;/p&gt;
&lt;p&gt;谈起2015年的计划，我打开的轻单账户，看到自己在2015年年初的写过一个list，也就只列了8条，现在对比起来一个都没有做成，想想是不是很可怕呢？也未必，这一年真的不一样，那个时候还没有做出一个决定——考研。所以导致年初的制定的计划后面六条一个都没有做成【前两个做了，没有做成功】想想都要流泪。这一年跨度大三大四，这种感觉真的不一样，感觉自己在变化，在成长。年初开学的时候，回到学校，发现了很多很多人在说考研这个事，以为他们是说着玩，当初自己也就是随口说了一嘴“我也要考”，好像记得当初学校做了一个调查，我当时还填了一个“工作”的意愿。没有过多少天发现他们不是说着玩的，后来自己也就落实了自己所说的上面，言出必行嘛【其实我一直是不看好考研这个，更何况自己是想干互联网的，所以好多需要到实践中积累，后来很多人问我“你不是不看好考研的嘛你为嘛还要考研，如果你还这样问的吧，你就自己揣摩吧，答案就在这里】。&lt;/p&gt;
&lt;h2 id=&quot;关于学习&quot;&gt;&lt;a href=&quot;#关于学习&quot; class=&quot;headerlink&quot; title=&quot;关于学习&quot;&gt;&lt;/a&gt;&lt;strong&gt;关于学习&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;这一年学习应该是最有好多想说的了，从决定考研的时候，应该可以说每天坚持学习，至于学习的效率，我真对自己有点呵呵了，发现学习最大的干扰就是手机了，后来临近考试的时候，自己也意识到这个问题，所以每天强迫自己不带手机就去图书馆，这样也确实看到了效果，至少在图书馆的时间能够充分利用到90%，这样一算的话，一天从早上八点考试学习，到晚上九点半，一共13.5小时，再除去中午晚上吃法加休息的3个小时，一天怎么也会有十个小时。哎，早知道这样坚持的话，应该肯定能考上了。说多了都是泪。&lt;/p&gt;
&lt;p&gt;学习还是要制定个一个计划，有的时候真的需要逼自己一把，只有自己逼自己，别人逼的话都是虚无缥缈的东西。还记得，四月份的时候，自己想要学习那个php开发一个电商网站，当初就只想用一个月的时间，把慕课网上的视频教程看完，给自己制定了一个计划：每天坚持一个小时学习视频，对着视频教程撸码，后来发现，真正投入的时候，自己花费上面的时间远远超过一个小时，一个月下来自己的收获真是满满的。有计划的学习，算是我的一个学习方法，后来我也用考研过程中数学和专业课的复习，虽然真的很难，用这样的方法去学习，至少不会让自己变的内心后怕，因为这样做会使得自己有条不紊地进行。&lt;/p&gt;
&lt;p&gt;其次就是学习技巧了，你每天有大把大把的时间逛各种社交网站，刷微博刷朋友圈，刷微博刷朋友圈确实能让自己得到稍微的放松，缓解自己的压力。朋友圈有各种这样的文章的分享，平时看到是鸡汤的文章我都是99.9%的跳过，自己就是自己的灵魂工程师，还需要看鸡汤，嘿嘿。对于分享的技术的文章，能看懂的当然看完，看不懂的文章会收藏起来【好的文章更要收藏了】，同时加上标签，以便以后看到查找。【注：这些功能都是微信最基本的功能，善于用起来对自己真的很有帮助】微博里也是差不多这样，现在微博里基本都是关注对自己有用的同行业的人，对他们同样进行了分组，更好的管理他们输出的价值，看到好的技术文章同样会star收藏。还有就是善于使用微博的搜索功能，虽然做得不是很好，至少这个东西能让你精准找到你遇到“坑”的原因，一般情况微博搜索能让我找到答案。【这个功能微信里面也有，关键字搜索能查到自己想要的东西。】还有微博的微盘也是很不错的，反正能找到对我有用的东西。最后想说的，&lt;strong&gt;其他东西，真的不要百度不要百度不要百度！！！谷歌哟谷歌哟谷歌哟！！！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最后，多写博客，这一年自己没有怎么写博客，个人觉得写博客能让自己有提升，因为自己学习的时候喜欢看别人的博客，或许我能绕开别人踩过的坑。嘿嘿。自己有所思有所想的时候就应该记录下来。反正这样对自己没有什么坏处。还有写博客算是一种价值输出吧，可能你踩过的坑对别人来说就是一点帮助吧。&lt;/p&gt;
&lt;h2 id=&quot;关于身体锻炼&quot;&gt;&lt;a href=&quot;#关于身体锻炼&quot; class=&quot;headerlink&quot; title=&quot;关于身体锻炼&quot;&gt;&lt;/a&gt;&lt;strong&gt;关于身体锻炼&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;身体是自己的，自己要懂得珍惜，锻炼身体更需坚持。这一年，自己做得不够好，坚持锻炼也就4月份坚持了整整一个月的跑步，后来都断断续续的了。不要给自己找借口，锻炼身体都能坚持得下来。&lt;/p&gt;
&lt;h2 id=&quot;关于坚持和专注&quot;&gt;&lt;a href=&quot;#关于坚持和专注&quot; class=&quot;headerlink&quot; title=&quot;关于坚持和专注&quot;&gt;&lt;/a&gt;&lt;strong&gt;关于坚持和专注&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;以前常被人说我是一个没有专注的人，做事没有三分钟的热度。今年这一年考研坐冷板凳的磨练，让我更懂得什么是坚持，什么叫专注。我坚持了到最后，我坚持从每天早上7点起床到后来6点半起床再到6点起床学习到，晚上也从9点回寝到9点回寝再到10点半回寝，我能做了这些，这些并不算心酸，至少我能坚持下来，其实别人也能坚持下来。其实这个没有神么，就是在于自己的实践，不是嘴皮子功夫，落实到行动才是关键。&lt;/p&gt;
&lt;p&gt;至于专注，怎么说，如果能找到自己的兴趣点，自己自然会去专注。像谈恋爱也应该要这样吧，专注的人才是更加迷人。真正知道专注我也是在大三的时候知道自己将来毕业了想在哪个行业混准备做什么。大学四年快要结束了，现在想来唯一的遗憾：在这样艺术气息浓厚的校园，我没有用大一大二大三的时间折腾点设计方面的东西，现在意识到这一点，或许有点晚，或许一点也不晚。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;2015年的小失败：在9月份的时候参加腾讯的校招，当初笔试真的很糟糕。清晰地记得吃了算法的亏。后来连百度的校招都没有敢参加，真的没有那个勇气了。希望2016年能够拾起算法，对自己的技术学习有所帮助。&lt;/p&gt;
&lt;h2 id=&quot;对2016年展望&quot;&gt;&lt;a href=&quot;#对2016年展望&quot; class=&quot;headerlink&quot; title=&quot;对2016年展望&quot;&gt;&lt;/a&gt;&lt;strong&gt;对2016年展望&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;再也不用在年初制定一年的计划了，而是应该将实践目标阶段化，细节化。同时不要underestimate my capability and overestimate the difficulties。即enough！！！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;写这个的时候是自己刚刚参加完研究生考试，说实话心里真的是一万个草泥马，这题也太难了，比去年的还要难。后来想想也不对，要难大家一起难嘛。再后来又听说了今年考研有政治英语泄题的事件，心里又开始不平衡了。哎，自己活得太真实……&lt;/p&gt;
&lt;p&gt;大概从什么时候开始喜欢写年度总结，这样
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>讨论下redis集群方案以及遇到过的坑</title>
    <link href="http://www.dyike.com/2015/10/22/%E8%AE%A8%E8%AE%BA%E4%B8%8Bredis%E9%9B%86%E7%BE%A4%E6%96%B9%E6%A1%88%E4%BB%A5%E5%8F%8A%E9%81%87%E5%88%B0%E8%BF%87%E7%9A%84%E5%9D%91/"/>
    <id>http://www.dyike.com/2015/10/22/讨论下redis集群方案以及遇到过的坑/</id>
    <published>2015-10-22T14:10:54.000Z</published>
    <updated>2016-04-15T09:59:31.000Z</updated>
    
    <content type="html">&lt;p&gt;【今日话题】&lt;/p&gt;
&lt;p&gt;讨论下redis集群方案以及遇到过的坑 - 阿牛哥&lt;/p&gt;
&lt;p&gt;1. twemproxy，codis，未来的redis-cluster&lt;/p&gt;
&lt;p&gt;codis的作者出来创业了，但是一直很活跃 - hello&lt;/p&gt;
&lt;p&gt;2. Redis cluster 以后的趋势 - 如末&lt;/p&gt;
&lt;p&gt;3. 胡兰tv已经用redis cluster了 - sky&lt;/p&gt;
&lt;p&gt;4. codis组件太多了&lt;/p&gt;
&lt;p&gt;但是周边工具很配套 - hello&lt;/p&gt;
&lt;p&gt;5. 目前在用Twemproxy做集群 git上这个已经很久不更新了， Twemproxy支持的命令也有限， - hey&lt;/p&gt;
&lt;p&gt;6. 市面上最多的估计据就是它了 官方的cluster还不成熟稳定 Codis 其实也不算成熟 - 如末&lt;/p&gt;
&lt;p&gt;7. 目前的redis基于2.6自己定制的…… - tiyee&lt;/p&gt;
&lt;p&gt;8. redis集群 我自己之前的操作方法是直接利用redis_sentinel 一主多从 故障之后 选举出新的master 多个master之间利用一致性hash做分配 - lawlielt&lt;/p&gt;
&lt;p&gt;9. 偷偷抛个小炸弹：&lt;/p&gt;
&lt;p&gt;主redis做数据变更，从做数据查询，但从会产生临时中间计算器数据，这样子大家认为对主从同步是否有影响？为啥[偷笑] - 乔楚&lt;/p&gt;
&lt;p&gt;回: 万一全部同步的话 中间数据岂不是被覆盖了？&lt;/p&gt;
&lt;p&gt;如果是命令同步 竟然同步必然会涉及到一个类似于什么命令缓存偏移的问题吧 更新操作 会不会影响从库的同步点的问题&lt;/p&gt;
&lt;p&gt;主从也要考虑很多问题的 类似于故障迁移 扩展之类的 - lawlielt&lt;/p&gt;
&lt;p&gt;10. 其实很想知道有将red is cluster 官方版那个用起来的吗？&lt;/p&gt;
&lt;p&gt;我之前收到试用过几次，还挺好用。就是phpredis 扩展缺乏支持 - 如末&lt;/p&gt;
&lt;p&gt;11. 我有用过，不过被phpredis坑死了&lt;/p&gt;
&lt;p&gt;估计没有proxy不行 - Huangsir&lt;/p&gt;
&lt;p&gt;12. 确实phpredis 对集群用起来很蛋疼。昨天看了下&lt;/p&gt;
&lt;p&gt;Predis 这个代码扩展。倒是用起来很好用。但是估计效率差点 - 如末&lt;/p&gt;
&lt;p&gt;13. 豌豆荚分布式Redis的设计与实现 &lt;a href=&quot;http://www.infoq.com/cn/presentations/design-and-implementation-of-wandoujia-distributed-redis&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.infoq.com/cn/presentations/design-and-implementation-of-wandoujia-distributed-redis&lt;/a&gt; - 昱北&lt;/p&gt;
&lt;p&gt;【分享链接】&lt;/p&gt;
&lt;p&gt;1. 多人开发的 Git 流程 &lt;a href=&quot;http://gold.xitu.io/entry/56263cfd00b0023ca69de5ec&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://gold.xitu.io/entry/56263cfd00b0023ca69de5ec&lt;/a&gt; - ShiverySea&lt;/p&gt;
&lt;p&gt;2. 维护一个大型开源项目是怎样的体验？ &lt;a href=&quot;http://www.zhihu.com/question/36292298/answer/67049956&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.zhihu.com/question/36292298/answer/67049956&lt;/a&gt; - 猿蜗&lt;/p&gt;
&lt;p&gt;3. MariaDB 10.1 每秒可处理一百万查询 &lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5ODM5MDU3MA==&amp;amp;mid=400055734&amp;amp;idx=1&amp;amp;sn=d04822306c80e5bf00203cecda1dfdaf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://mp.weixin.qq.com/s?__biz=MzA5ODM5MDU3MA==&amp;amp;mid=400055734&amp;amp;idx=1&amp;amp;sn=d04822306c80e5bf00203cecda1dfdaf&lt;/a&gt; - tony&lt;/p&gt;
&lt;p&gt;4. 无线APP日志上报优化实践 &lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5ODYxMDA5OQ==&amp;amp;mid=400110965&amp;amp;idx=1&amp;amp;sn=d105f59c78bfaaab943e0e0bde925d99&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://mp.weixin.qq.com/s?__biz=MjM5ODYxMDA5OQ==&amp;amp;mid=400110965&amp;amp;idx=1&amp;amp;sn=d105f59c78bfaaab943e0e0bde925d99&lt;/a&gt; - 朱政国&lt;/p&gt;
&lt;p&gt;5. 西部数据宣布190亿美元收购闪迪SanDisk &lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5MzM3NjM4MA==&amp;amp;mid=400599228&amp;amp;idx=1&amp;amp;sn=43287d40a9c8421214fcf608861e90c9&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://mp.weixin.qq.com/s?__biz=MjM5MzM3NjM4MA==&amp;amp;mid=400599228&amp;amp;idx=1&amp;amp;sn=43287d40a9c8421214fcf608861e90c9&lt;/a&gt; - @理鱼&lt;/p&gt;
&lt;p&gt;6. 微服务年度总结，看完这个你应该知道如何回答别人的问题了。 &lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA5ODM0NjA3NA==&amp;amp;mid=400146790&amp;amp;idx=1&amp;amp;sn=5cba6e9f90db52dc6d9010c3237c1902&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://mp.weixin.qq.com/s?__biz=MzA5ODM0NjA3NA==&amp;amp;mid=400146790&amp;amp;idx=1&amp;amp;sn=5cba6e9f90db52dc6d9010c3237c1902&lt;/a&gt; - @理鱼&lt;/p&gt;
&lt;p&gt;7. PHP 性能优化 &lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzAwNjMxMTA5Mw==&amp;amp;mid=400058189&amp;amp;idx=1&amp;amp;sn=bada7be26e1d33071af23e6765ef8a51&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://mp.weixin.qq.com/s?__biz=MzAwNjMxMTA5Mw==&amp;amp;mid=400058189&amp;amp;idx=1&amp;amp;sn=bada7be26e1d33071af23e6765ef8a51&lt;/a&gt; - 黑夜路人&lt;/p&gt;
&lt;p&gt;8. Redis数据结构与存储 &lt;a href=&quot;http://shift-alt-ctrl.iteye.com/blog/1874693&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://shift-alt-ctrl.iteye.com/blog/1874693&lt;/a&gt; - 程序员朋&lt;/p&gt;
&lt;p&gt;9. Nginx image processing server with OpenResty and Lua &lt;a href=&quot;http://leafo.net/posts/creating_an_image_server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://leafo.net/posts/creating_an_image_server.html&lt;/a&gt; - 姚文强&lt;/p&gt;
&lt;p&gt;10. 构建高性能web之路——mysql读写分离实战 &lt;a href=&quot;http://blog.csdn.net/cutesource/article/details/5710645&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/cutesource/article/details/5710645&lt;/a&gt; - 黑夜路人&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;【今日话题】&lt;/p&gt;
&lt;p&gt;讨论下redis集群方案以及遇到过的坑 - 阿牛哥&lt;/p&gt;
&lt;p&gt;1. twemproxy，codis，未来的redis-cluster&lt;/p&gt;
&lt;p&gt;codis的作者出来创业了，但是一直很活跃 - hello&lt;/p&gt;
&lt;p&gt;2. Redis c
    
    </summary>
    
    
      <category term="redis" scheme="http://www.dyike.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>用 Vagrant 管理虚拟机</title>
    <link href="http://www.dyike.com/2015/09/20/Vagrant%E7%AE%A1%E7%90%86%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    <id>http://www.dyike.com/2015/09/20/Vagrant管理虚拟机/</id>
    <published>2015-09-20T11:28:24.000Z</published>
    <updated>2016-04-15T10:00:38.000Z</updated>
    
    <content type="html">&lt;p&gt;Vagrant 可以让我们用命令直接从云上下载虚拟机的镜像，你想要什么系统都行，Centos，Ubuntu …   只需要一行命令，然后再用命令去操作虚拟机，启动，暂停，关闭，重启，你可以更方便的管理所有的在本地上电脑上的虚拟机镜像，手工去配置它们，可以再重新打包成新的镜像，方便你跟你的团队在其它的项目上重复使用。&lt;/p&gt;
&lt;h2 id=&quot;安装-Vagrant&quot;&gt;&lt;a href=&quot;#安装-Vagrant&quot; class=&quot;headerlink&quot; title=&quot;安装 Vagrant&quot;&gt;&lt;/a&gt;安装 Vagrant&lt;/h2&gt;&lt;p&gt;Vagrant 提供了一个虚拟机的管理层，虚拟机本身还是需要用到虚拟机的软件，比如 VMware，Virtualbox 等等，推荐用 Virtualbox 。使用系统的包管理工具去安装软件。&lt;/p&gt;
&lt;p&gt;###&lt;/p&gt;
&lt;h3 id=&quot;Mac-上安装-Vagrant&quot;&gt;&lt;a href=&quot;#Mac-上安装-Vagrant&quot; class=&quot;headerlink&quot; title=&quot;Mac 上安装 Vagrant&quot;&gt;&lt;/a&gt;Mac 上安装 Vagrant&lt;/h3&gt;&lt;p&gt;[cce]brew install vagrant[/cce]&lt;/p&gt;
&lt;h3 id=&quot;Mac-上安装-Virtualbox&quot;&gt;&lt;a href=&quot;#Mac-上安装-Virtualbox&quot; class=&quot;headerlink&quot; title=&quot;Mac 上安装 Virtualbox&quot;&gt;&lt;/a&gt;Mac 上安装 Virtualbox&lt;/h3&gt;&lt;p&gt;[cce]brew install Caskroom/cask/virtualbox[/cce]&lt;/p&gt;
&lt;h2 id=&quot;Box&quot;&gt;&lt;a href=&quot;#Box&quot; class=&quot;headerlink&quot; title=&quot;Box&quot;&gt;&lt;/a&gt;Box&lt;/h2&gt;&lt;p&gt;Box ，你可以把它想成是一个箱子，里面装了一些东西。在用 Vagrant 创建虚拟机的时候，需要用到 Box ，它里面会包装操作系统的镜像，不同的 Box 带的操作系统可能是不一样的，比如 CentOS，Ubuntu 等等，你可以基于它们去创建自己版本的 Box，比如在虚拟机上安装一些软件，然后把它重新打包成 Box 。&lt;/p&gt;
&lt;p&gt;在 Vagrant 提供的云服务（&lt;a href=&quot;https://vagrantcloud.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://vagrantcloud.com/&lt;/a&gt;）上面可以下载到别人做好的 Box，这个云服务现在叫 Atlas，是 hashicorp 公司的一个产品，Vagrant 也是这家公司的项目。打开这个地址以后，可以去搜索想要用的 Box，可以搜索操作系统的名字，也可以搜索特定的软件的名字，比如 Laravel，Drupal …    在搜索结果上面会显示这个 Box 的下载的次数，你可以用来判断这个 Box 是否受欢迎。&lt;/p&gt;
&lt;p&gt;我们需要一个纯净的 Box，就是只包含操作系统，在系统上没有安装其它的多余的东西。注意不同发行版的 Linux 操作起来是有些区别的，我推荐先用一下 CentOS 这款操作系统。&lt;/p&gt;
&lt;h3 id=&quot;添加-Box&quot;&gt;&lt;a href=&quot;#添加-Box&quot; class=&quot;headerlink&quot; title=&quot;添加 Box&quot;&gt;&lt;/a&gt;添加 Box&lt;/h3&gt;&lt;p&gt;你要把 Box 下载到本地的电脑上，交给 Vagrant 去管理，这样在创建虚拟机的时候，Vagrant 会复制一份你指定的 Box 到你的项目里面，这样你在这个虚拟机上的操作，就不会影响到其它的项目。先确定你用的电脑上的操作系统的位数，现在一般都是 64 位的操作系统。打开命令行工具以后，执行 vagrant box add 命令去添加 Box 。&lt;br&gt;[cce]vagrant box add 名字[/cce]&lt;br&gt;如果你指定的 Box 在本地电脑上不存在，Vagrant 就会到它的云上去给你下载。执行：&lt;br&gt;[cce]vagrant box add chef/centos-6.5[/cce]&lt;br&gt;上面的 chef/centos-6.5 还有 centos-6.5-i386 就是想要添加的 Box 的名字，最前面的 chef  ，是一个命名空间，一般就是这个 Box 的作者的名字，后面的 centos-6.5 表示这个 Box 的操作系统是 CentOS ，版本是 6.5 ，i386 表示 32 位的系统。&lt;/p&gt;
&lt;h3 id=&quot;查看本地上的-Box-列表&quot;&gt;&lt;a href=&quot;#查看本地上的-Box-列表&quot; class=&quot;headerlink&quot; title=&quot;查看本地上的 Box 列表&quot;&gt;&lt;/a&gt;查看本地上的 Box 列表&lt;/h3&gt;&lt;p&gt;完成以后，可以查看一下在本地上的 Box 列表。&lt;br&gt;[cce]vagrant box list[/cce]&lt;/p&gt;
&lt;h3 id=&quot;手工下载并添加-Box-的方法&quot;&gt;&lt;a href=&quot;#手工下载并添加-Box-的方法&quot; class=&quot;headerlink&quot; title=&quot;手工下载并添加 Box 的方法&quot;&gt;&lt;/a&gt;手工下载并添加 Box 的方法&lt;/h3&gt;&lt;p&gt;在执行 Vagrant box add 添加 Box 的时候，Vagrant 会在命令行上显示 Box 的下载地址，下载的速度还有进度，如果你在国内，很可能下载的速度非常慢。你可以复制 Box 的下载地址，然后用下载工具，比如用迅雷去下载。&lt;/p&gt;
&lt;p&gt;完成以后，找到下载下来的文件，文件名里会包含 .box 这个扩展名，如果不是，你需要手工添加这个扩展名。并且重命名一下文件，比如命名为 centos_6.5.box 。然后把它放到桌面上，其它地方也行。打开命令行，进入到手工下面的 Box 文件所在的位置。比如&lt;br&gt;[cce]cd ~/ityike[/cce]&lt;br&gt;然后查看一下文件列表：&lt;br&gt;[cce]ls[/cce]&lt;br&gt;确定 Box 文件在当前的目录的下面，再执行 vagrant box add 命令去手工添加 Box 。&lt;br&gt;[cce]vagrant box add 名称 路径[/cce]&lt;br&gt;名称就是你想给这个 Box 起的名字，以后我们会用到这个名字去管理这个 Box，路径是 Box 文件所在的位置，如果你要添加的 Box 直接在你当前所在的目录的下面，可以直接使用 Box 文件的名称，像这样：&lt;br&gt;[cce]vagrant box add centos-6.5 centos-6.5.box[/cce]&lt;br&gt;Vagrant 会把 Box 文件复制到系统的某个特定的目录的下面，完成以后，你就可以把桌面上的 Box 文件删除掉了。&lt;br&gt;[cce]rm centos-6.5.box[/cce]&lt;br&gt;再查看一下可用的 Box 列表：&lt;br&gt;[cce]vagrant box list[/cce]&lt;br&gt;在返回的列表里，你应该可以找到自己手工添加的 centos-6.5 这个 Box 。&lt;/p&gt;
&lt;h3 id=&quot;管理-Box&quot;&gt;&lt;a href=&quot;#管理-Box&quot; class=&quot;headerlink&quot; title=&quot;管理 Box&quot;&gt;&lt;/a&gt;管理 Box&lt;/h3&gt;&lt;p&gt;添加到本地电脑上的 Box 会放到一个特定的目录的下面。跟 Box 相关的命令，可以用 vagrant box 命令查看。使用的方法就是 vagrant box 后面再加上子相应的子命令，接着是对应的参数。常用的就是 add ，list 还有 remove。add 是添加新的 Box ，list 可以查看已有的 Box ，remove 就是从系统中删除掉 Box 。注意在创建虚拟机的时候，Vagrant 会把你指定的 Box 复制一份放到特定的目录的下面。所以，你在使用 remove 命令删除掉添加到系统中的 Box 的时候，不会影响到这些已有的虚拟机。&lt;/p&gt;
&lt;h2 id=&quot;创建虚拟机&quot;&gt;&lt;a href=&quot;#创建虚拟机&quot; class=&quot;headerlink&quot; title=&quot;创建虚拟机&quot;&gt;&lt;/a&gt;创建虚拟机&lt;/h2&gt;&lt;p&gt;添加了 Box 以后，我们就可以用 Vagrant 基于这个 Box 去创建虚拟机了。先找个地方去创建一个目录，这个目录就是你的项目所在的目录，它会自动跟虚拟机上的某个目录同步，也就是在你电脑上的这个目录里面的文件，你同样可以在虚拟机里的某个目录里面找到。比如我要在桌面上创建一个叫 ninghao-project 的目录，然后再进入到这个目录，在命令行工具下面执行：&lt;br&gt;[cce]&lt;br&gt;cd ~/ityike&lt;br&gt;mkdir ityike-project&lt;br&gt;cd ityike-project&lt;br&gt;[/cce]&lt;/p&gt;
&lt;h3 id=&quot;初始化&quot;&gt;&lt;a href=&quot;#初始化&quot; class=&quot;headerlink&quot; title=&quot;初始化&quot;&gt;&lt;/a&gt;初始化&lt;/h3&gt;&lt;p&gt;首先要做的就是初始化一下，用 vagrant init ，后面指定一下要使用的 Box 的名字。完成以后，在你的目录下面创建一个叫 Vagrantfile 的文件。&lt;/p&gt;
&lt;p&gt;先查看一下可用的 Box&lt;br&gt;[cce]vagrant box list[/cce]&lt;br&gt;如果跟着我的步骤来，你应该可以看到一个叫 centos-6.5 的 Box 。下面我们用这个 Box 去初始化一下项目。&lt;br&gt;[cce]vagrant init centos-6.5[/cce]&lt;br&gt;完成以后，查看一下当前目录下面的东西。&lt;br&gt;[cce]ls[/cce]&lt;br&gt;你会看到一个 Vagrantfile 文件，这个文件是配置当前项目的虚拟机用的，以后我们会再回来看一下怎么样使用这个文件。&lt;/p&gt;
&lt;h3 id=&quot;启动虚拟机&quot;&gt;&lt;a href=&quot;#启动虚拟机&quot; class=&quot;headerlink&quot; title=&quot;启动虚拟机&quot;&gt;&lt;/a&gt;启动虚拟机&lt;/h3&gt;&lt;p&gt;Vagrant 提供了一些命令可以操作虚拟机，比如启动，暂停，关闭或者销毁虚拟机。启动虚拟机，执行：&lt;br&gt;[cce]vagrant up[/cce]&lt;/p&gt;
&lt;p&gt;&lt;pre&gt;&lt;span style=&quot;font-family: Georgia, &#39;Times New Roman&#39;, &#39;Bitstream Charter&#39;, Times, serif; line-height: 1.5;&quot;&gt;第一次启动，花的时间会长一些，因为 Vagrant 会把你为项目指定的 Box 复制到一个地方，然后再去启动它。完成以后，你可以用命令再查看一下虚拟机的状态：&lt;/span&gt;&lt;/pre&gt;&lt;br&gt;[cce]vagrant status[/cce]&lt;br&gt;如果返回的是 running ，说明虚拟机启动成功，现在你就可以使用 ssh 连接到虚拟机，去控制它了。&lt;/p&gt;
&lt;h3 id=&quot;控制虚拟机&quot;&gt;&lt;a href=&quot;#控制虚拟机&quot; class=&quot;headerlink&quot; title=&quot;控制虚拟机&quot;&gt;&lt;/a&gt;控制虚拟机&lt;/h3&gt;&lt;p&gt;想在 Linux 系统的虚拟机上进行操作，你要用 ssh 连接到虚拟机，这跟你远程控制 Linux 的服务器是一样的。&lt;/p&gt;
&lt;h4 id=&quot;Mac&quot;&gt;&lt;a href=&quot;#Mac&quot; class=&quot;headerlink&quot; title=&quot;Mac&quot;&gt;&lt;/a&gt;Mac&lt;/h4&gt;&lt;p&gt;[cce]vagrant ssh[/cce]&lt;/p&gt;
&lt;h3 id=&quot;暂停与恢复&quot;&gt;&lt;a href=&quot;#暂停与恢复&quot; class=&quot;headerlink&quot; title=&quot;暂停与恢复&quot;&gt;&lt;/a&gt;暂停与恢复&lt;/h3&gt;&lt;p&gt;虚拟机在运行的时候会消耗你的电脑资源，比如内存，CPU 等等，在不用它的时候，可以关掉或者使用暂停，暂停虚拟机可以保存虚拟机运行时候的状态，暂停以后，除了占点硬盘空间以外，就不会消耗你的其它资源了。&lt;/p&gt;
&lt;p&gt;进入到项目所在的目录，然后可以用 vagrant status 查看一下当前的虚拟机的状态，如果是 running ，你就可以使用命令去暂停一下：&lt;br&gt;[cce]vagrant suspend[/cce]&lt;br&gt;重新恢复起动，执行命令：&lt;br&gt;[cce]vagrant resume[/cce]&lt;br&gt;想要彻底关掉虚拟机的运行，执行：&lt;br&gt;[cce]vagrant halt[/cce]&lt;br&gt;停止以后，要想再起动虚拟机，要执行：&lt;br&gt;[cce]vagrant up[/cce]&lt;/p&gt;
&lt;h3 id=&quot;删除虚拟机&quot;&gt;&lt;a href=&quot;#删除虚拟机&quot; class=&quot;headerlink&quot; title=&quot;删除虚拟机&quot;&gt;&lt;/a&gt;删除虚拟机&lt;/h3&gt;&lt;p&gt;不打算再用的虚拟机，可以把它删除掉，直接删除项目的目录是不行的，因为为项目指定的虚拟机并不包含在这个项目的目录下面，需要使用命令去删除虚拟机。进入到项目所在目录，然后执行：&lt;br&gt;[cce]vagrant destroy[/cce]&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;配置共享目录&quot;&gt;&lt;a href=&quot;#配置共享目录&quot; class=&quot;headerlink&quot; title=&quot;配置共享目录&quot;&gt;&lt;/a&gt;配置共享目录&lt;/h3&gt;&lt;p&gt;打开 Vagrantfile ，搜索一下共享目录的配置：&lt;br&gt;[cce]# config.vm.synced_folder[/cce]&lt;br&gt;去掉这行代码前面的 # 符号 。这个配置后面有两个参数，第一个参数是主机上的目录，可以使用绝对的位置，也可以使用相对的位置，如果是相对位置，是相对于项目根目录的位置，也就是相对于 Vagrantfile 这个文件所在的目录的位置。两个参数之间是一个逗号，第二个参数是在虚拟机上的目录，如果你设置的目录在虚拟机上不存在，Vagrant 在启动虚拟机的时候，会自动去创建这个目录。&lt;br&gt;比如：&lt;br&gt;[cce]config.vm.synced_folder “app”, “/vagrant”[/cce]&lt;/p&gt;
&lt;h2 id=&quot;端口转发&quot;&gt;&lt;a href=&quot;#端口转发&quot; class=&quot;headerlink&quot; title=&quot;端口转发&quot;&gt;&lt;/a&gt;端口转发&lt;/h2&gt;&lt;p&gt;然后搜索：&lt;br&gt;[cce]&lt;/p&gt;
&lt;h1 id=&quot;config-vm-network-“forwarded-port”-guest-80-host-8080-cce&quot;&gt;&lt;a href=&quot;#config-vm-network-“forwarded-port”-guest-80-host-8080-cce&quot; class=&quot;headerlink&quot; title=&quot;config.vm.network “forwarded_port”, guest: 80, host: 8080[/cce]&quot;&gt;&lt;/a&gt;config.vm.network “forwarded_port”, guest: 80, host: 8080[/cce]&lt;/h1&gt;&lt;p&gt;去掉这行代码最前面的 # 号， 这个配置就是端口转发&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Vagrant 可以让我们用命令直接从云上下载虚拟机的镜像，你想要什么系统都行，Centos，Ubuntu …   只需要一行命令，然后再用命令去操作虚拟机，启动，暂停，关闭，重启，你可以更方便的管理所有的在本地上电脑上的虚拟机镜像，手工去配置它们，可以再重新打包成新的镜像
    
    </summary>
    
    
      <category term="vagrant virtualbox" scheme="http://www.dyike.com/tags/vagrant-virtualbox/"/>
    
  </entry>
  
  <entry>
    <title>由于自己的疏忽，一个低级的错误</title>
    <link href="http://www.dyike.com/2015/09/19/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%94%99%E8%AF%AF/"/>
    <id>http://www.dyike.com/2015/09/19/记一次错误/</id>
    <published>2015-09-19T11:20:17.000Z</published>
    <updated>2016-04-15T10:00:16.000Z</updated>
    
    <content type="html">&lt;p&gt;PHP中continue后面的分号，疏忽掉就会出现不一样的情况。&lt;br&gt;看一个简单的例子：&lt;br&gt;&lt;code&gt;&amp;lt;?php
for ($i = 0; $i &amp;amp;lt; 5; ++$i) {
if ($i == 2)
continue;
print &amp;quot;$i\n&amp;quot;;
}
?&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这种情况输出的结果：&lt;br&gt;&lt;code&gt;0
1
3
4&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;去掉分号后：&lt;br&gt;&lt;code&gt;&amp;lt;?php
for ($i = 0; $i &amp;amp;lt; 5; ++$i) {
if ($i == 2)
continue
print &amp;quot;$i\n&amp;quot;;
}
?&amp;gt;&lt;/code&gt;&lt;br&gt;在php5.4之前的版本输出的结果：&lt;br&gt;&lt;code&gt;2&lt;/code&gt;&lt;br&gt;因为整个 continue print “$i\n”; 被当做单一的表达式而求值，所以 print 函数只有在 $i == 2 为真时才被调用（print 的值被当成了上述的可选数字参数而传递给了 continue）。&lt;/p&gt;
&lt;p&gt;还有重要的，在php5.4版本中，这个情况是不能输出结果的。&lt;br&gt;&lt;code&gt;5.4.0 continue 0; 不再合法。这在之前的版本被解析为 continue 1;。&lt;/code&gt;&lt;br&gt;&lt;code&gt;5.4.0 取消变量作为参数传递（例如 $num = 2; continue $num;）。&lt;/code&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;PHP中continue后面的分号，疏忽掉就会出现不一样的情况。&lt;br&gt;看一个简单的例子：&lt;br&gt;&lt;code&gt;&amp;lt;?php
for ($i = 0; $i &amp;amp;lt; 5; ++$i) {
if ($i == 2)
continue;
print &amp;quot;$i
    
    </summary>
    
    
      <category term="PHP" scheme="http://www.dyike.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>Centos7下配置nginx，mysql，php环境</title>
    <link href="http://www.dyike.com/2015/09/16/Centos7%E4%B8%8B%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9A%84%E9%85%8D%E7%BD%AE/"/>
    <id>http://www.dyike.com/2015/09/16/Centos7下开发环境的配置/</id>
    <published>2015-09-16T12:56:59.000Z</published>
    <updated>2016-04-15T08:45:13.000Z</updated>
    
    <content type="html">&lt;p&gt;一、概述&lt;/p&gt;
&lt;p&gt;今天在虚拟机上基于Centos安装配置了服务器运行环境，web服务用 nginx，数据库存储在 mysql（使用MariaDB）,动态脚本语言是 php。&lt;/p&gt;
&lt;p&gt;二、步骤&lt;/p&gt;
&lt;p&gt;首页保证 Centos7 已经安装完毕，正常运行。如果没有安装，请到官网下载（&lt;a href=&quot;http://www.centos.org/download/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.centos.org/download/&lt;/a&gt; ）。如何安装就不在这里赘述了。接下来分5步介绍nginx，mysql，php的安装和配置。&lt;/p&gt;
&lt;p&gt;1.第一步:安装nginx&lt;br&gt;添加centos yum源。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo rpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm&lt;/code&gt;&lt;br&gt;安装nginx&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo yum install nginx&lt;/code&gt;&lt;br&gt;启动nginx服务&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo systemctl start nginx.service&lt;/code&gt;&lt;br&gt;访问ip地址，如出现Nginx欢迎页面，则说明nginx已经安装并正常运行。&lt;/p&gt;
&lt;p&gt;设置开机自动启动Nginx&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo systemctl enable nginx.service&lt;/code&gt;&lt;br&gt;2.第二步：安装mysql（用MariaDB）&lt;br&gt;MariaDB数据库管理系统是MySQL的一个分支，主要由开源社区在维护，采用GPL授权许可 MariaDB的目的是完全兼容MySQL，包括API和命令行，使之能轻松成为MySQL的代替品。&lt;/p&gt;
&lt;p&gt;安装MariaDB&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo yum install mariadb-server mariadb&lt;/code&gt;&lt;br&gt;开启MariaDB&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo systemctl start mariadb&lt;/code&gt;&lt;br&gt;在成功启动 MariaDB/MySQL 服务后，执行在 MariaDB/MySQL 服务包中的脚本。这一次的运行会为为数据库服务器进行一些安全强化措施，如设置（非空）的 root 密码、删除匿名用户、锁定远程访问。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo mysql_secure_installation&lt;/code&gt;&lt;br&gt;接下来在命令行会提示设置mysql用户名和密码，全选yes。&lt;/p&gt;
&lt;p&gt;设置开机自动重启mysql&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo systemctl enable mariadb.service&lt;/code&gt;&lt;br&gt;3.第三步，安装PHP&lt;br&gt;安装Php和php 扩展&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo yum install php php-mysql php-fpm php-mbstring php-gd php-pear php-mcrypt  php-mhash php-eaccelerator  php-cli php-imap php-ldap php-odbc php-pear php-xml php-xmlrpc php-mssql php-snmp php-soap php-tidy php-common php-devel php-pecl-xdebug -y&lt;/code&gt;&lt;br&gt;编辑php配置文件&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo vi /etc/php.ini
cgi.fix_pathinfo=0&lt;/code&gt;&lt;br&gt;设置php-fpm配置文件&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo vi /etc/php-fpm.d/www.conf
listen = /var/run/php-fpm/php-fpm.sock&lt;/code&gt;&lt;br&gt;启动php-fpm服务&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo systemctl start php-fpm&lt;/code&gt;&lt;br&gt;设置开机自动重启php-fpm&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo systemctl enable php-fpm.service&lt;/code&gt;&lt;br&gt;4.第四步：配置nginx站点&lt;br&gt;编辑站点配置文件&lt;/p&gt;
&lt;p&gt;`sudo vi /etc/nginx/conf.d/default.conf&lt;br&gt;server {&lt;br&gt;    listen       80;&lt;br&gt;    server_name  locaihost;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root   /opt/data;
index index.php index.html index.htm;

location / {
    try_files $uri $uri/ =404;
}
error_page 404 /404.html;
error_page 500 502 503 504 /50x.html;
location = /50x.html {
    root /usr/share/nginx/html;
}

location ~ \.php$ {
    try_files $uri =404;
    fastcgi_pass unix:/var/run/php-fpm/php-fpm.sock;
    fastcgi_index index.php;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    include fastcgi_params;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;}`&lt;br&gt;重启nginx&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo systemctl restart nginx&lt;/code&gt;&lt;br&gt;5.第五步：测试php脚本web服务&lt;br&gt;编辑测试文件&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo vi /opt/data/info.php&lt;/code&gt;&lt;br&gt;访问页面,能看到php各种配置信息的话说明配置成功。&lt;br&gt;&lt;code&gt;http://192.168.33.10/info.php&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;删除测试文件&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo rm /opt/data/info.php&lt;/code&gt;&lt;br&gt;到此CentOS 7下nginx，mysql，php安装配置全部完成，可以作为web平台的应用环境使用&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;一、概述&lt;/p&gt;
&lt;p&gt;今天在虚拟机上基于Centos安装配置了服务器运行环境，web服务用 nginx，数据库存储在 mysql（使用MariaDB）,动态脚本语言是 php。&lt;/p&gt;
&lt;p&gt;二、步骤&lt;/p&gt;
&lt;p&gt;首页保证 Centos7 已经安装完毕，正常运行。如果没
    
    </summary>
    
    
      <category term="PHP" scheme="http://www.dyike.com/tags/PHP/"/>
    
      <category term="工具" scheme="http://www.dyike.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="虚拟机" scheme="http://www.dyike.com/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>科学上网：用VPS搭建shadowsocks服务器</title>
    <link href="http://www.dyike.com/2015/09/04/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    <id>http://www.dyike.com/2015/09/04/科学上网/</id>
    <published>2015-09-04T13:54:11.000Z</published>
    <updated>2016-04-15T10:32:49.000Z</updated>
    
    <content type="html">&lt;p&gt;学会 科学上网：用 VPS搭建shadowsocks 服务器&lt;/p&gt;
&lt;p&gt;目前将shadowsocks部署到25端口似乎还不会被封锁，大家可以尝试。&lt;/p&gt;
&lt;h2 id=&quot;购买VPS服务器&quot;&gt;&lt;a href=&quot;#购买VPS服务器&quot; class=&quot;headerlink&quot; title=&quot;购买VPS服务器&quot;&gt;&lt;/a&gt;购买VPS服务器&lt;/h2&gt;&lt;p&gt;主流的VPS（虚拟主机）服务器提供商有三家：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;linode&lt;/li&gt;
&lt;li&gt;digital ocean&lt;/li&gt;
&lt;li&gt;bandwagon&lt;br&gt;下面的比上面的便宜。如果只是自用，bandwagon足够。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一般使用paypal绑定一个visa或mastercard信用卡来付款。注意要用国际paypal帐号，国内的是不能用外币付款的。&lt;/p&gt;
&lt;p&gt;在bandwagon购买VPS以后会获得一个主机地址和用于ssh登录的root密码。&lt;/p&gt;
&lt;h2 id=&quot;远程登陆VPS&quot;&gt;&lt;a href=&quot;#远程登陆VPS&quot; class=&quot;headerlink&quot; title=&quot;远程登陆VPS&quot;&gt;&lt;/a&gt;远程登陆VPS&lt;/h2&gt;&lt;p&gt;Mac OS X 或Linux下直接在终端中&lt;br&gt;&lt;code&gt;ssh root@your_vps_ip -p your_ssh_port&lt;/code&gt;&lt;br&gt;即可。&lt;/p&gt;
&lt;p&gt;在windows系统下需要专门的客户端来SSH登录VPS。在&lt;a href=&quot;http://www.netsarang.com/download/down_form.html?code=522&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;xShell官网&lt;/a&gt; 下载xShell。&lt;/p&gt;
&lt;p&gt;家庭和学校用户可以免费试用，下载时选择home and school use即可。需要用邮箱注册一下，下载链接会发送到邮箱中。&lt;/p&gt;
&lt;p&gt;xShell中新建一个连接，会要求输入目标IP地址和端口，以及root密码，按提示操作即可。&lt;/p&gt;
&lt;h2 id=&quot;安装shadowsocks&quot;&gt;&lt;a href=&quot;#安装shadowsocks&quot; class=&quot;headerlink&quot; title=&quot;安装shadowsocks&quot;&gt;&lt;/a&gt;安装shadowsocks&lt;/h2&gt;&lt;p&gt;打开shell，使用VPS服务商提供的root用户和密码SSH登录VPS。然后执行如下命令：&lt;/p&gt;
&lt;h3 id=&quot;Debian-Ubuntu&quot;&gt;&lt;a href=&quot;#Debian-Ubuntu&quot; class=&quot;headerlink&quot; title=&quot;Debian/Ubuntu:&quot;&gt;&lt;/a&gt;Debian/Ubuntu:&lt;/h3&gt;&lt;p&gt;&lt;code&gt;apt-get install python-pip
pip install shadowsocks&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;CentOS&quot;&gt;&lt;a href=&quot;#CentOS&quot; class=&quot;headerlink&quot; title=&quot;CentOS:&quot;&gt;&lt;/a&gt;CentOS:&lt;/h3&gt;&lt;p&gt;&lt;code&gt;yum install python-setuptools &amp;amp;amp;&amp;amp;amp; easy_install pip
pip install shadowsocks&lt;/code&gt;&lt;br&gt;shadowsocks就安装好了。&lt;/p&gt;
&lt;p&gt;有时Ubuntu会遇到第一个命令安装python-pip时找不到包的情况。pip官方给出了一个安装脚本，可以自动安装pip。先下载脚本，然后执行即可：&lt;br&gt;&lt;code&gt;wget https://bootstrap.pypa.io/get-pip.py
python get-pip.py&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;编写配置文件&quot;&gt;&lt;a href=&quot;#编写配置文件&quot; class=&quot;headerlink&quot; title=&quot;编写配置文件&quot;&gt;&lt;/a&gt;编写配置文件&lt;/h2&gt;&lt;p&gt;shadowsocks启动时的参数，如服务器端口，代理端口，登录密码等，可以通过启动时的命令行参数来设定，也可以通过json格式的配置文件设定。推荐使用配置文件，方便查看和修改。&lt;/p&gt;
&lt;p&gt;用vi新建一个配置文件：&lt;br&gt;&lt;code&gt;vi /etc/shadowsocks.json&lt;/code&gt;&lt;br&gt;然后输入如下内容：&lt;br&gt;&lt;code&gt;{
&amp;quot;server&amp;quot;:&amp;quot;my_server_ip&amp;quot;,
&amp;quot;server_port&amp;quot;:25,
&amp;quot;local_address&amp;quot;: &amp;quot;127.0.0.1&amp;quot;,
&amp;quot;local_port&amp;quot;:1080,
&amp;quot;password&amp;quot;:&amp;quot;mypassword&amp;quot;,
&amp;quot;timeout&amp;quot;:300,
&amp;quot;method&amp;quot;:&amp;quot;aes-256-cfb&amp;quot;,
&amp;quot;fast_open&amp;quot;: false
}&lt;/code&gt;&lt;br&gt;保存退出。&lt;/p&gt;
&lt;h2 id=&quot;启动shadowsocks&quot;&gt;&lt;a href=&quot;#启动shadowsocks&quot; class=&quot;headerlink&quot; title=&quot;启动shadowsocks&quot;&gt;&lt;/a&gt;启动shadowsocks&lt;/h2&gt;&lt;p&gt;如果已经写好了配置文件，启动shadowsocks服务器的命令如下：&lt;br&gt;&lt;code&gt;ssserver -c /etc/shadowsocks.json&lt;/code&gt;&lt;br&gt;后台启动和停止shadowsocks服务器：&lt;br&gt;&lt;code&gt;ssserver -c /etc/shadowsocks.json -d start
ssserver -c /etc/shadowsocks.json -d stop&lt;/code&gt;&lt;br&gt;shadowsocks的日志保存在&lt;br&gt;&lt;code&gt;/var/log/shadowsocks.log&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;安装并启动shadowsocks客户端&quot;&gt;&lt;a href=&quot;#安装并启动shadowsocks客户端&quot; class=&quot;headerlink&quot; title=&quot;安装并启动shadowsocks客户端&quot;&gt;&lt;/a&gt;安装并启动shadowsocks客户端&lt;/h2&gt;&lt;p&gt;shadowsocks支持windows、Mac OS X、Linux、Android、iOS等多个平台。不过iOS由于系统对应用后台运行的限制，只能使用客户端内嵌的浏览器科学上网，不能给其他应用代理。&lt;/p&gt;
&lt;p&gt;shadowsocks项目Github主页：&lt;a href=&quot;https://github.com/shadowsocks/shadowsocks&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/shadowsocks/shadowsocks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;里面可以找到客户端下载地址。&lt;/p&gt;
&lt;p&gt;下载安装客户端以后，只需按服务器的配置填写IP地址、服务器端口、本地端口（如果没有本地端口选项，就是默认的1080）、密码、加密方式等参数，启动就可以了。&lt;/p&gt;
&lt;p&gt;客户端支持全局代理和PAC代理两种方式，后者会使用一个脚本来自动检查一个网站是否在需要代理的网站列表中，自动选择直接连接或代理连接。&lt;/p&gt;
&lt;p&gt;PAC列表可以在线更新，但是难免有收录不全的情况。这时可以选择关闭shadowsocks代理（实际上是取消对系统代理的配置，shadowsocks客户端仍然保持工作），然后使用支持自定义规则的代理管理插件来实现自动切换代理，比如switchyOmega。&lt;/p&gt;
&lt;h2 id=&quot;使用switchyOmega实现自动切换代理&quot;&gt;&lt;a href=&quot;#使用switchyOmega实现自动切换代理&quot; class=&quot;headerlink&quot; title=&quot;使用switchyOmega实现自动切换代理&quot;&gt;&lt;/a&gt;使用switchyOmega实现自动切换代理&lt;/h2&gt;&lt;p&gt;switchyOmega是chrome浏览器上一个很好用的代理管理插件。它的前身switchySharp更有名。&lt;/p&gt;
&lt;p&gt;chrome应用商店本身需要翻墙才能访问，因此需要先在shadowsocks启动代理模式下下载安装，再关闭shadowsocks代理。&lt;/p&gt;
&lt;p&gt;安装完毕后，右击switchyOmega图标，选择选项，进入switchOmega配置界面。&lt;/p&gt;
&lt;h3 id=&quot;创建shadowsocks情景模式&quot;&gt;&lt;a href=&quot;#创建shadowsocks情景模式&quot; class=&quot;headerlink&quot; title=&quot;创建shadowsocks情景模式&quot;&gt;&lt;/a&gt;创建shadowsocks情景模式&lt;/h3&gt;&lt;p&gt;新建一个情景模式，比如叫SS，代理协议选择socks5，代理地址为127.0.0.1，端口1080。&lt;/p&gt;
&lt;p&gt;现在切换到SS情景模式就可以通过shadowsocks科学上网了。后面获取自动切换规则列表&lt;/p&gt;
&lt;h3 id=&quot;设置自动切换模式&quot;&gt;&lt;a href=&quot;#设置自动切换模式&quot; class=&quot;headerlink&quot; title=&quot;设置自动切换模式&quot;&gt;&lt;/a&gt;设置自动切换模式&lt;/h3&gt;&lt;p&gt;在设置界面选择自动切换模式，在“切换规则”中勾选“规则列表规则”，对应的情景模式选择刚刚新建的SS。&lt;/p&gt;
&lt;p&gt;然后在下面的规则列表地址中填写&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://autoproxy-gfwlist.googlecode.com/svn/trunk/gfwlist.txt&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://autoproxy-gfwlist.googlecode.com/svn/trunk/gfwlist.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;规则列表格式选择AutoProxy。&lt;/p&gt;
&lt;p&gt;然后点击立即更新情景模式， 更新完成后会有提示。&lt;/p&gt;
&lt;p&gt;点击左侧的“应用选项”。然后单击switchyOmega图标，选择自动切换，就可以在访问“不存在的网站”时自动切换到shadowsocks代理了。&lt;/p&gt;
&lt;h3 id=&quot;添加自定义规则&quot;&gt;&lt;a href=&quot;#添加自定义规则&quot; class=&quot;headerlink&quot; title=&quot;添加自定义规则&quot;&gt;&lt;/a&gt;添加自定义规则&lt;/h3&gt;&lt;p&gt;如果遇到某个国外网站无法直接连接或速度太慢时，可以单击switchyOmega图标，选择“添加条件”，情景模式选择SS，就可以了。&lt;/p&gt;
&lt;p&gt;这时打开switchyOmega选项，在自动切换模式的切换规则中就可以看到刚刚添加的规则。可以在这里管理自定义的规则。&lt;/p&gt;
&lt;h3 id=&quot;导入和导出switchyOmega设置&quot;&gt;&lt;a href=&quot;#导入和导出switchyOmega设置&quot; class=&quot;headerlink&quot; title=&quot;导入和导出switchyOmega设置&quot;&gt;&lt;/a&gt;导入和导出switchyOmega设置&lt;/h3&gt;&lt;p&gt;如果换了一台电脑，重新设置一遍switchyOmega就太麻烦了。可以在设置好的switchyOmega中导出设置文件，在另一个chrome浏览器中导入，就可以直接复制原来的设置了。&lt;/p&gt;
&lt;p&gt;在switchyOmega选项的左侧点击“导入/导出”，点击“生成备份文件”即可生成switchyOmega设置备份。点击“从备份文件恢复”可以导入备份文件。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;学会 科学上网：用 VPS搭建shadowsocks 服务器&lt;/p&gt;
&lt;p&gt;目前将shadowsocks部署到25端口似乎还不会被封锁，大家可以尝试。&lt;/p&gt;
&lt;h2 id=&quot;购买VPS服务器&quot;&gt;&lt;a href=&quot;#购买VPS服务器&quot; class=&quot;headerlink&quot; 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>2015年8月8日晚小记</title>
    <link href="http://www.dyike.com/2015/08/08/2015%E5%B9%B48%E6%9C%888%E6%97%A5%E6%99%9A%E8%AE%B0/"/>
    <id>http://www.dyike.com/2015/08/08/2015年8月8日晚记/</id>
    <published>2015-08-08T13:59:45.000Z</published>
    <updated>2016-04-15T08:44:32.000Z</updated>
    
    <content type="html">&lt;p&gt;好久好久没有对自己进行总结了，记得上一次对自己得总结还是2015年初写2014年的总结。2015年都已经走下了一大半了，该总结的总结了。还记得年初的时候在轻单list了一份计划，现在看看，有的实现了，有的今年不能实现了。&lt;/p&gt;
&lt;p&gt;3月份大三开学，回学校做了一个决定，几乎改变了今年的动向，那个时候觉得自己就是在做梦一样，可是偏偏自己决定了考研。常常对自己说，&lt;strong&gt;&lt;u&gt;自己决定的东西，含着泪也要坚持做完。&lt;/u&gt;&lt;/strong&gt;我一直是反对考研的人，因为考研就意味能找到一个好的工作？身边好多同学都会反驳我不是说考研不好嘛为什么还要考研，我都是说“现在我还是觉得考研并一定是一个最好的选择”。&lt;/p&gt;
&lt;p&gt;在决定的过程中，自己犹豫过，不知道自己选择考什么专业，毕竟如今的互联网技术发展太快了，人们喜欢学习新的知识。也犹豫是不是要留北京，总之太多的犹豫，不过最后还是爽快地决定了。离考研的日子越来越近了，这个过程确实有很多的感受，自己吊儿郎当过，也任性过。有时候想放弃，学习真的太痛苦了，自己已经不是以前的自己，已经不太适合学习。。。可人都是被逼出来的，在学校的时候，把高数翻了一遍，英语单词也过完一遍，也复习了数据结构，学习了计算机网络。&lt;/p&gt;
&lt;p&gt;暑假，也是人生中的最后一个暑假，还是选择一放假就回来了，回来跟父母在一起。回来重要的任务还是学习迎考。但是在家的学习效率还是很低很低的。现在做数学全书题目【做到积分】，每天对着考点复习计算机组成原理，英语词汇在过第二遍……虽然在家已经习惯每天早上六点起床，但每天有很多的松懈的时候，感觉自己还不处于饱和的状态。【此文也是在提醒自己】&lt;/p&gt;
&lt;p&gt;说了这么多学习，还要说点其他的。四月份坚持跑步一个月，原本把这个事坚持下去，最后还是没有坚持得下去，那一个月最充实，每天还坚持写代码，哪怕只写一个函数调用……美好的事情总是短暂的，原因还是我自己的问题。&lt;/p&gt;
&lt;p&gt;哦，还有一个事就是大三下学期没有挂科，这个有记录的意义。其他我没有写的事应该都是鸡毛蒜皮的事了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;好久好久没有对自己进行总结了，记得上一次对自己得总结还是2015年初写2014年的总结。2015年都已经走下了一大半了，该总结的总结了。还记得年初的时候在轻单list了一份计划，现在看看，有的实现了，有的今年不能实现了。&lt;/p&gt;
&lt;p&gt;3月份大三开学，回学校做了一个决定，几
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>【08-03】业余时间怎么充电？技术管理的进阶，有哪些初和中级书籍，工具？技术思想怎么提升和实践？</title>
    <link href="http://www.dyike.com/2015/08/04/%E4%B8%9A%E4%BD%99%E5%AD%A6%E4%B9%A0/"/>
    <id>http://www.dyike.com/2015/08/04/业余学习/</id>
    <published>2015-08-04T13:25:50.000Z</published>
    <updated>2016-04-15T09:55:39.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;转自2015-08-04-黑夜路人技术&quot;&gt;&lt;a href=&quot;#转自2015-08-04-黑夜路人技术&quot; class=&quot;headerlink&quot; title=&quot;转自2015-08-04 黑夜路人技术&quot;&gt;&lt;/a&gt;&lt;em&gt;转自2015-08-04&lt;/em&gt; 黑夜路人技术&lt;/h2&gt;&lt;p&gt;【今日话题】&lt;/p&gt;
&lt;p&gt;业余时间大家是怎么充电？技术管理的进阶，有哪些方面的初和中级书籍，工具？技术思想怎么提升和实践？ - 马犇 星星bigxing&lt;/p&gt;
&lt;p&gt;1. 介绍一个充电好地方，黑夜路人技术微信群phper值得进的群。 - 拉菲哥&lt;/p&gt;
&lt;p&gt;2. 据说管理可以从生养孩子开始 - 胡继伟&lt;/p&gt;
&lt;p&gt;3. 偏基础和理论的自修，偏思维进阶和实践的要交流 - Jesse&lt;/p&gt;
&lt;p&gt;4. 个人感觉充电的方向如果和手头的项目紧密关键效果会很好 学以致用 - 蚂蚁&lt;/p&gt;
&lt;p&gt;5. 下班时间会读想要了解的技术方面的书籍来充电 - phpfans&lt;/p&gt;
&lt;p&gt;6. 看大牛们的博客， - 王大锤&lt;/p&gt;
&lt;p&gt;7. 《代码大全》 - 黄垣华&lt;/p&gt;
&lt;p&gt;8. 刚来北京要找工作的时候～看过一些大公司面试要求上面的知识点～针对性google了一遍～盲区变少～知识颠覆对初入行有帮助 - 零度西瓜&lt;/p&gt;
&lt;p&gt;9. Linux 管理：&lt;/p&gt;
&lt;p&gt;《Linux 系统管理技术手册》 案头必备的工具书。&lt;/p&gt;
&lt;p&gt;《鸟哥的 Linux 私房菜》不错的入门书。&lt;/p&gt;
&lt;p&gt;《Linux 101 Hacks》常用命令手册&lt;/p&gt;
&lt;p&gt;《UNIX Shell Scripting》写脚本的参考书&lt;/p&gt;
&lt;p&gt;《The Linux Command Line》更详细的命令手册&lt;/p&gt;
&lt;p&gt;Linux 编程：&lt;/p&gt;
&lt;p&gt;《Linux 系统编程》对常用 API 讲述最详细的一本书&lt;/p&gt;
&lt;p&gt;《UNIX 环境高级编程》经典&lt;/p&gt;
&lt;p&gt;《The Linux Programming Interface》与上本书配套&lt;/p&gt;
&lt;p&gt;《程序员的自我修养》别被名字误导，极好的一本深度基础书。&lt;/p&gt;
&lt;p&gt;《深入理解 Linux 内核》可以翻翻，对提升细节理解有好处。&lt;/p&gt;
&lt;p&gt;《UNIX 网络编程》经典&lt;/p&gt;
&lt;p&gt;《TCP/IP 高级编程》好书&lt;/p&gt;
&lt;p&gt;C/C++:&lt;/p&gt;
&lt;p&gt;《C 程序设计语言》入门书&lt;/p&gt;
&lt;p&gt;《Lnux C 编程一站式学习》Linux 下开发的入门书&lt;/p&gt;
&lt;p&gt;《C 语言核心技术》参考手册&lt;/p&gt;
&lt;p&gt;《彻底搞定 C 指针》最好的指针入门书&lt;/p&gt;
&lt;p&gt;《C++ 编程思想》经典&lt;/p&gt;
&lt;p&gt;《高质量程序设计指南——C/C++语言》经典&lt;/p&gt;
&lt;p&gt;《C 专家编程》&lt;/p&gt;
&lt;p&gt;《C 和指针》&lt;/p&gt;
&lt;p&gt;《C 陷阱与缺陷》&lt;/p&gt;
&lt;p&gt;Golang:&lt;/p&gt;
&lt;p&gt;《Learing Go》简单&lt;/p&gt;
&lt;p&gt;《The Go Programming Language》比较详细&lt;/p&gt;
&lt;p&gt;《The way to Go》提升&lt;/p&gt;
&lt;p&gt;Javascript:&lt;/p&gt;
&lt;p&gt;《Javascript, A Beginner’s Guide》&lt;/p&gt;
&lt;p&gt;《Object-Oriented Javascript》&lt;/p&gt;
&lt;p&gt;Python:&lt;/p&gt;
&lt;p&gt;《Python Pocket Reference》适合经常翻翻&lt;/p&gt;
&lt;p&gt;《Expert Python Programming》某些地方很有启发&lt;/p&gt;
&lt;p&gt;其他:&lt;/p&gt;
&lt;p&gt;《深入理解计算机系统》经典，必读&lt;/p&gt;
&lt;p&gt;《计算机组成与设计》可以翻翻&lt;/p&gt;
&lt;p&gt;《汇编语言》王爽 最好的汇编入门书&lt;/p&gt;
&lt;p&gt;《数据结构》C 语言版 经典&lt;/p&gt;
&lt;p&gt;《Java 数据结构和算法》更易阅读&lt;/p&gt;
&lt;p&gt;《Debug Hacks 中文版》GDB 入门书&lt;/p&gt;
&lt;p&gt;《设计模式——可复用面向对象软件的基础》经典&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;老虎&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;10. 我一般会去国外淘一些比较好的视频教程，一边看，一边照着做，效果不错 - 姚文强&lt;/p&gt;
&lt;p&gt;11. 在大学如果能所这些基础弄好，出来干个一年，就会有指数性增长&lt;/p&gt;
&lt;p&gt;我认识一人，重庆大学电子系，大学6年都在学。。出来在南京呆了一年，来上海就上升到技术经理了。 - tywei&lt;/p&gt;
&lt;p&gt;12. 计算机书籍控 &lt;a href=&quot;http://bestcbooks.com/categories/c/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://bestcbooks.com/categories/c/&lt;/a&gt; - victor_少钢&lt;/p&gt;
&lt;p&gt;13. 人月神话 算不算。。 - 孟尧&lt;/p&gt;
&lt;p&gt;14. 吴军的那几本书不错&lt;/p&gt;
&lt;p&gt;松本有本书叫《代码的未来》对我挺有影响的。&lt;/p&gt;
&lt;p&gt;管理类的书籍强烈推荐一本《领导梯队》，看到王兴在美团力推，我就买来看了看，挺好。 - 幻觉大的很&lt;/p&gt;
&lt;p&gt;15. 我给大家推荐一本书，奇特的一生。 - 阿牛哥&lt;/p&gt;
&lt;p&gt;16. 周爱民有本 大道至简里，专门吐槽 人月神话 老提问题，不求本质 - 孟尧&lt;/p&gt;
&lt;p&gt;17. 大话设计模式，高性能mysql，mysql技术内幕—innodb存储引擎 - 周志&lt;/p&gt;
&lt;p&gt;18. 大家平时是怎么分配时间看书的，我身边的朋友有两类，一是利用很长的一段时间来看，比如3个月，每天看一点点。另外一类朋友，喜欢短时间内，一直看这本书。比如每天下班回家看个几个小时&lt;/p&gt;
&lt;p&gt;我是不管怎么样，每天都必须翻一翻，哪怕就是翻一页想睡觉了，也要看上几页。话说，对于喜欢熬夜的童鞋，又想改掉这个习惯的，看书真的是一个不错的选择，说不定没看几分钟就倦意袭来 - 阿牛哥&lt;/p&gt;
&lt;p&gt;19. 浪潮之巅 - 如末&lt;/p&gt;
&lt;p&gt;20. 难道不应该多学学英语吗&lt;/p&gt;
&lt;p&gt;我觉得吧，工作了，很多基础知识和技能被忽视了，比如英语，计算机体系的知识。&lt;/p&gt;
&lt;p&gt;偏基础的知识读起来比较苦闷，不然技能书籍读起来畅快&lt;/p&gt;
&lt;p&gt;很多人，虽然写代码多年，但知识不成体系，阻碍了自身发展&lt;/p&gt;
&lt;p&gt;会再多的语言，也还是很浅显的层面，还美其名曰”全栈工程师” - tiyee&lt;/p&gt;
&lt;p&gt;21. 之前看过疯狂的程序员，感觉刚毕业的或者在校童鞋可以看看&lt;/p&gt;
&lt;p&gt;unix编程艺术 - 宋明明&lt;/p&gt;
&lt;p&gt;22. 我一般只看几页没意思，下次接着看还是得把这几页重新看一遍，看一次尽量把一个相对独立的知识点看完，然后一次专注看一本书，看完再下一本，储备太多书会经常每本都没看完的情况，买书还看时效，有时候兴趣一提就买了，如果不马上看完，过两个月就不会看了 - JoJo&lt;/p&gt;
&lt;p&gt;23. 操作系统的书大家来推荐几本，我一口气读完了操作系统哲学原理 通俗&lt;/p&gt;
&lt;p&gt;以我的观察，身边很多同事都是1年工作经验工作10年&lt;/p&gt;
&lt;p&gt;充其量只是熟练点而已&lt;/p&gt;
&lt;p&gt;没有知识体系，也不愿意去学习 - 阿牛哥&lt;/p&gt;
&lt;p&gt;24. 像代码大全，重构这类书，我觉得是必看的，我身边同事很多人都没看过，甚至没有看书的习惯，我都不喜欢跟他们一起工作&lt;/p&gt;
&lt;p&gt;其实学习也是相对的，身边牛人多，就不敢不学，分分钟被淘汰，像我这边还是牛人太少 - JoJo&lt;/p&gt;
&lt;p&gt;25. 工作必备技能不看更要命&lt;/p&gt;
&lt;p&gt;比如协同开发，版本控制，我是开发岗位，但是涉及协同开发，这东西必须要会。否则没法合作呀 - 宋明明&lt;/p&gt;
&lt;p&gt;26. 还得多买几本教你怎么吹牛的书。 - 如末&lt;/p&gt;
&lt;p&gt;27. 网易有一套完整的本科计算机课程&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://study.163.com/curricula/cs.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://study.163.com/curricula/cs.htm&lt;/a&gt; - tiyee&lt;/p&gt;
&lt;p&gt;28. 我的习惯是这样的: 先初步了解，然后做中学，追求极致的想着怎么做好，然后会发现某些方面的匮乏，在去专攻，如此循环。把手头的事，身边的事做极致，想极致，一个点一个点的最后会连成线，最后在面的层面大量看书去融会贯通，线和面也交替循环。 - 劉飛&lt;/p&gt;
&lt;p&gt;29. 以学习php拓展为例子。可以在公司内部的技术群招募想要学习的人。公司大牛做指导。然后，每周抽一天或者二天下班后，大家一起学习。目前所在公司是大牛组织学习，讲解。大家平时自己抽时间练习。 - HQ数字卡&lt;/p&gt;
&lt;p&gt;30. 多看书，多撸代码，多思考！&lt;/p&gt;
&lt;p&gt;我一般先把工作中需要用的知识以及相关的知识都搞熟，这样学习的知识就能在实际工作中进行应用，同时，我也会比工作中其它成员知道的更多，也会让我能够更加熟悉的驾驭工作，之后当工作已经没有任何问题以后，再以工作中的知识点进行拓展！ -&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;果冻&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;31. 先完成手上的工作，如果遇到一些不懂得最后解决了，或者看其他人的好的代码，都要写博客记录下来。手头上的工作不要拖，越早完成越好，那么剩下的时间都是你的了，你可以看书，可以写博客，可以学其他的东西。 - 如末&lt;/p&gt;
&lt;p&gt;32. 看开源的代码会提升的比较快，但是在看的时候要清楚自己想要获得什么！ - 阿辉&lt;/p&gt;
&lt;p&gt;33. 最近总结php高级应该掌握的技术各位觉的怎么样&lt;/p&gt;
&lt;p&gt;1 yii thinkphp ci 各自优点&lt;/p&gt;
&lt;p&gt;2 php 设计模式&lt;/p&gt;
&lt;p&gt;3 c 排序算法&lt;/p&gt;
&lt;p&gt;4 php 基本结构&lt;/p&gt;
&lt;p&gt;5 memcache magent 分布式设计&lt;/p&gt;
&lt;p&gt;6 redis 分布式设计&lt;/p&gt;
&lt;p&gt;7 mongo 集群架构&lt;/p&gt;
&lt;p&gt;8 mysql 索引原理及sql性能优化&lt;/p&gt;
&lt;p&gt;9 tcp/ip 网络协议&lt;/p&gt;
&lt;p&gt;10 php 处理大数据业务&lt;/p&gt;
&lt;p&gt;11 linux 应用 负载性能查看&lt;/p&gt;
&lt;p&gt;12 nginx 实战优化业务功能&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;罗金龙&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;【分享链接】&lt;/p&gt;
&lt;p&gt;1. [MySQL FAQ]系列 — 怎么计算打开文件数 &lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NzAzMTY4NQ==&amp;amp;mid=207286573&amp;amp;idx=1&amp;amp;sn=7d7d69eac648ee85b5c2e31e6a5001fe&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://mp.weixin.qq.com/s?__biz=MjM5NzAzMTY4NQ==&amp;amp;mid=207286573&amp;amp;idx=1&amp;amp;sn=7d7d69eac648ee85b5c2e31e6a5001fe&lt;/a&gt; - 马振国&lt;/p&gt;
&lt;p&gt;2. etcd 2.1发布，可不宕机滚动升级 &lt;a href=&quot;http://dockone.io/article/539&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://dockone.io/article/539&lt;/a&gt; - xingxing&lt;/p&gt;
&lt;p&gt;3. RebornDB：下一代分布式Key-Value数据库架构介绍 &lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzAwNjMxNjQzNA==&amp;amp;mid=208050108&amp;amp;idx=1&amp;amp;sn=05f972ab35726fcaa0fc3a8c4e9a33f8&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://mp.weixin.qq.com/s?__biz=MzAwNjMxNjQzNA==&amp;amp;mid=208050108&amp;amp;idx=1&amp;amp;sn=05f972ab35726fcaa0fc3a8c4e9a33f8&lt;/a&gt; - 黑夜路人&lt;/p&gt;
&lt;p&gt;4. Google 镜像站搜集 &lt;a href=&quot;https://github.com/sxyx2008/DevArticles/issues/99&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/sxyx2008/DevArticles/issues/99&lt;/a&gt; - 风轻轻&lt;/p&gt;
&lt;p&gt;5. 基于容器的微服务架构剖析 &lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NzAwNDI4Mg==&amp;amp;mid=210298194&amp;amp;idx=1&amp;amp;sn=2b14ab466002088dfd7ce2f2d7ea2ac6&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://mp.weixin.qq.com/s?__biz=MjM5NzAwNDI4Mg==&amp;amp;mid=210298194&amp;amp;idx=1&amp;amp;sn=2b14ab466002088dfd7ce2f2d7ea2ac6&lt;/a&gt; - 鲁猛&lt;/p&gt;
&lt;p&gt;6. Asynchronous Javascript templating for the browser and server &lt;a href=&quot;https://github.com/linkedin/dustjs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/linkedin/dustjs&lt;/a&gt; - twin&lt;/p&gt;
&lt;p&gt;7. 分布式系统若干经验总结 &lt;a href=&quot;http://m.oschina.net/blog/409503&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://m.oschina.net/blog/409503&lt;/a&gt; - 不如&lt;/p&gt;
&lt;p&gt;8. 做一个这样的 APP 要多久？ &lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5ODI5Njc2MA==&amp;amp;mid=210896168&amp;amp;idx=1&amp;amp;sn=a5ac91b3da39c1d8c67bfd1aa84bd220&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://mp.weixin.qq.com/s?__biz=MjM5ODI5Njc2MA==&amp;amp;mid=210896168&amp;amp;idx=1&amp;amp;sn=a5ac91b3da39c1d8c67bfd1aa84bd220&lt;/a&gt; - null&lt;/p&gt;
&lt;p&gt;9. 作为程序员最应该投资的是这十件事 &lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzI1OTAwNDAzNA==&amp;amp;mid=208152421&amp;amp;idx=1&amp;amp;sn=9830a91208b1dfdbee64752f235ace56&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://mp.weixin.qq.com/s?__biz=MzI1OTAwNDAzNA==&amp;amp;mid=208152421&amp;amp;idx=1&amp;amp;sn=9830a91208b1dfdbee64752f235ace56&lt;/a&gt; - 黑夜路人&lt;/p&gt;
&lt;p&gt;10. 我用爬虫一天时间“偷了”知乎一百万用户，只为证明PHP是世界上最好的语言 &lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzAwNjMxMTA5Mw==&amp;amp;mid=212859441&amp;amp;idx=1&amp;amp;sn=d73ece2901ec4eabc2b5ea896141305f&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://mp.weixin.qq.com/s?__biz=MzAwNjMxMTA5Mw==&amp;amp;mid=212859441&amp;amp;idx=1&amp;amp;sn=d73ece2901ec4eabc2b5ea896141305f&lt;/a&gt; - 黑夜路人&lt;/p&gt;
&lt;p&gt;11. 微服务实战（三）：深入微服务架构的进程间通信 &lt;a href=&quot;http://dockone.io/article/549&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://dockone.io/article/549&lt;/a&gt; - 不如&lt;/p&gt;
&lt;p&gt;12. 构建亿级前端读服务 &lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5NDMwNjMzNA==&amp;amp;mid=207712155&amp;amp;idx=1&amp;amp;sn=8944ec13cc1a0639d844c4466f44c2b6&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://mp.weixin.qq.com/s?__biz=MjM5NDMwNjMzNA==&amp;amp;mid=207712155&amp;amp;idx=1&amp;amp;sn=8944ec13cc1a0639d844c4466f44c2b6&lt;/a&gt; - 飞翔的尾巴&lt;/p&gt;
&lt;p&gt;13. 素数的妙用—一道关于字符串的面试题 &lt;a href=&quot;http://m.blog.chinaunix.net/uid-25538637-id-292076.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://m.blog.chinaunix.net/uid-25538637-id-292076.html&lt;/a&gt; - 金灶沐&lt;/p&gt;
&lt;p&gt;14. [MySQL优化案例]系列 — slave延迟很大优化方法 &lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5NzAzMTY4NQ==&amp;amp;mid=207299751&amp;amp;idx=1&amp;amp;sn=5d0b6cd66a4f3a848d08d04b354b282d&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://mp.weixin.qq.com/s?__biz=MjM5NzAzMTY4NQ==&amp;amp;mid=207299751&amp;amp;idx=1&amp;amp;sn=5d0b6cd66a4f3a848d08d04b354b282d&lt;/a&gt; - Klein&lt;/p&gt;
&lt;p&gt;15. 10 steps to becoming a better than programmer &lt;a href=&quot;http://tutscode.com/10-steps-becoming-better-programmer.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://tutscode.com/10-steps-becoming-better-programmer.html&lt;/a&gt; - xingxing&lt;/p&gt;
&lt;p&gt;16. CLI模式下几个实用的PHP函数。 &lt;a href=&quot;https://gist.github.com/liuxd/8097014&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://gist.github.com/liuxd/8097014&lt;/a&gt; - XiangZ&lt;/p&gt;
&lt;p&gt;17. The purpose of this site is to help you discover all the changes and new features in PHP7. &lt;a href=&quot;http://php7-tutorial.com/#1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://php7-tutorial.com/#1&lt;/a&gt; - Albert&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;转自2015-08-04-黑夜路人技术&quot;&gt;&lt;a href=&quot;#转自2015-08-04-黑夜路人技术&quot; class=&quot;headerlink&quot; title=&quot;转自2015-08-04 黑夜路人技术&quot;&gt;&lt;/a&gt;&lt;em&gt;转自2015-08-04&lt;/em&gt; 黑夜路人技术&lt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Go语言学习笔记：【Go中字符串小记】</title>
    <link href="http://www.dyike.com/2015/07/26/go%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01/"/>
    <id>http://www.dyike.com/2015/07/26/go学习笔记1/</id>
    <published>2015-07-26T09:01:49.000Z</published>
    <updated>2016-04-15T08:47:35.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Go语言中的字符串&quot;&gt;&lt;a href=&quot;#Go语言中的字符串&quot; class=&quot;headerlink&quot; title=&quot;Go语言中的字符串&quot;&gt;&lt;/a&gt;Go语言中的字符串&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;字符串是用一对双号(“”)或者单引号(‘’)括起来的定义的，它的类型是srting。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;值得注意的是，在go语言中字符串是不可变的，有这样一段代码，编译时会报错。&lt;/p&gt;
&lt;p&gt;`var s string = “hello”&lt;/p&gt;
&lt;p&gt;s[0] = ‘c’`&lt;/p&gt;
&lt;p&gt;但是想要修改怎么办呢？方法如下：&lt;/p&gt;
&lt;p&gt;`s := “hello”&lt;/p&gt;
&lt;p&gt;c := []byte(s) // 将字符串 s转换为 []byte类型&lt;/p&gt;
&lt;p&gt;c[0] = ‘c’&lt;/p&gt;
&lt;p&gt;s2 := string(c) // 再转换回 string类型&lt;/p&gt;
&lt;p&gt;fmt.Printf(“%s\n”, s2)`&lt;/p&gt;
&lt;p&gt;修改也可以这样：&lt;/p&gt;
&lt;p&gt;`s := “hello”&lt;/p&gt;
&lt;p&gt;s = “c” + s[1:] // 字符串虽不能更改，但可进行切片操作&lt;/p&gt;
&lt;p&gt;fmt.Printf(“%s\n”, s)`&lt;/p&gt;
&lt;p&gt;go中也可声明多行字符串，可以通过`来声明：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;m :=&lt;/code&gt;hello&lt;/p&gt;
&lt;p&gt;world``&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Go语言中的字符串&quot;&gt;&lt;a href=&quot;#Go语言中的字符串&quot; class=&quot;headerlink&quot; title=&quot;Go语言中的字符串&quot;&gt;&lt;/a&gt;Go语言中的字符串&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;字符串是用一对双号(“”)或者单引号(‘’)括起来的定义的，它的类型
    
    </summary>
    
    
      <category term="Golang" scheme="http://www.dyike.com/tags/Golang/"/>
    
  </entry>
  
  <entry>
    <title>【转载】06-19怎么学习或者阅读PHP源码？</title>
    <link href="http://www.dyike.com/2015/06/23/%E5%AD%A6%E4%B9%A0php%E6%BA%90%E7%A0%81/"/>
    <id>http://www.dyike.com/2015/06/23/学习php源码/</id>
    <published>2015-06-23T13:25:09.000Z</published>
    <updated>2016-04-15T08:45:29.000Z</updated>
    
    <content type="html">&lt;p&gt;【今日话题】&lt;/p&gt;
&lt;p&gt;怎么学习或者阅读PHP源码？ - kdrol.li&lt;/p&gt;
&lt;p&gt;1. 学习别人的源代码phpstorm等好用的IDE是必备利器，方便追踪查看 - 杨恒飞&lt;/p&gt;
&lt;p&gt;2. 这个源码指的是PHP的C源码吧，首先C基础是必须要掌握的，初学我个人建议先从自己熟悉的扩展开始阅读，比如ext/standard/array.c里面是常用的数组操作函数，ext/mysql下是对mysql原生api的封装，直接阅读Zend内核源码可能有点头大。阅读之前先从网上找点资料，把常见的数据结构、函数、宏的意思搞明白，看底层实现会有种豁然开朗的感觉。工具的话vim+ctags足够了，喜欢IDE的话就Source Insight。 - 马犇&lt;/p&gt;
&lt;p&gt;3. php学习方法：如何阅读php源代码&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzAwNjMxMTA5Mw==&amp;amp;mid=211794038&amp;amp;idx=1&amp;amp;sn=e0726f5334c5fb703ed1118403a1d8fb#rd&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://mp.weixin.qq.com/s?__biz=MzAwNjMxMTA5Mw==&amp;amp;mid=211794038&amp;amp;idx=1&amp;amp;sn=e0726f5334c5fb703ed1118403a1d8fb#rd&lt;/a&gt; - 泉-June&lt;/p&gt;
&lt;p&gt;4. 网上的文章什么的看一看有个大概的了解。装好好点的能导航的编辑器，我用的sublime和ctags，然后从官方的那几个扩展开始看看别人怎么写的，主要就关注下对字符串，数组，内存，函数的输入输出的处理，然后自己写点处理字符串的扩展学习一下，再后来写点网络相关的，处理下持久化资源什么的。其实也就是你想做个什么事，别人一般都做过了，看看别人扩展怎么写的，那些宏看多了有用的就那么一些。 - lalala&lt;/p&gt;
&lt;p&gt;5. &lt;a href=&quot;http://www.php-internals.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.php-internals.com/&lt;/a&gt; 把这本书都搞透了就很牛逼了 - 姚文强&lt;/p&gt;
&lt;p&gt;6. www.imsiren.com，这个blog学习扩展，lxr.php.net，搜索代码方便&lt;/p&gt;
&lt;p&gt;挖路的walu.cc都是很好学习资源&lt;/p&gt;
&lt;p&gt;解惑原理当然是鸟哥blog&lt;/p&gt;
&lt;p&gt;如果你C玩的溜，那学起来就事半功倍 - 星星&lt;/p&gt;
&lt;p&gt;7. 先了解两个结构hashtable和bucket，然后就可以了解各个php_function了，我就看了字符和数组相关函数，本来还想看看类方面的，实在是枯燥，犯困 - 徐刚&lt;/p&gt;
&lt;p&gt;8. 只看原理那你能不犯困么？没有正反馈啊，你应该先写个简单扩展出来，然后是问why 你得有性奋点，时不时刺激下才行 为啥喜欢SEX呢，大家琢磨琢磨 - 星星bigxing&lt;/p&gt;
&lt;p&gt;9. 对得 要写 然后不懂 再看书 消化 然后继续写。。光看理论。。。会睡着的 第一门语言最好是PYTHON 。。开阔视野~[偷笑] - 小明&lt;/p&gt;
&lt;p&gt;10. 写扩展和看php源码还是两码事，不看源码也不影响写扩展呀&lt;/p&gt;
&lt;p&gt;写扩展的目的一般是对自身业务的封装，出于性能或是其他因素，写不好是c语言功底的问题，可以学习php源码，也可以从一些更有针对性的来源项目源码去学习，后者更快 - 李鑫&lt;/p&gt;
&lt;p&gt;11. 1 要了解php源码项目工程组织架构，确定比较感兴趣的部分&lt;/p&gt;
&lt;p&gt;2 c 语言要过关，指针，struct 等知识点，看起来没压力。 - 罗金龙&lt;/p&gt;
&lt;p&gt;12. PHP源码能够读懂。其实要有一定的C语言基础的，特别是指针和结构体。&lt;/p&gt;
&lt;p&gt;不然，完全像在看天书。完全不知所谓。&lt;/p&gt;
&lt;p&gt;先去把C语言结构体搞透，再去看PHP源码。不要越级。&lt;/p&gt;
&lt;p&gt;国内有很多好的PHP源码解读的资料。不过有老，是PHP5.3的 - 如末&lt;/p&gt;
&lt;p&gt;13. github 上有个tipi 很全面 - Feel.&lt;/p&gt;
&lt;p&gt;14. 看源代码的动机是啥呢？觉得高大上？我倒是觉得看php的源码的意义远小于nginx和redis&lt;/p&gt;
&lt;p&gt;Nginx的意义在于对网络通讯的理解，redis的代码能加深对数据结构的领悟 - tiyee&lt;/p&gt;
&lt;p&gt;回: 萝卜白菜，各有所好呗…&lt;/p&gt;
&lt;p&gt;不然里面的各种级别的结构体嵌套，指针里面还有指针的指针，还有指针的指针的指针，各种指针函数相互调用…分分钟就晕，建议带着问题去看，带着自己的思路去看，有针对性的去看。 - carlsonlin&lt;/p&gt;
&lt;p&gt;回: 是的，读php源码性价比不如读nginx或者redis - song&lt;/p&gt;
&lt;p&gt;回: 还好吧…php源码都看完了，redis和nginx无压力的… - carlsonlin&lt;/p&gt;
&lt;p&gt;15. 我是首先把源码编译成debug版本，然后通过gdb tui来读，需要看看结构的时候就p出来 直接读代码的话借助ctags - nothing_zhangbc&lt;/p&gt;
&lt;p&gt;16. 最快的方法就是自己动手，php项目庞大，单单看是很低效的&lt;/p&gt;
&lt;p&gt;比如从写俄扩展开始&lt;/p&gt;
&lt;p&gt;怎么定义一个函数给用户用&lt;/p&gt;
&lt;p&gt;怎么定义一个类等等&lt;/p&gt;
&lt;p&gt;这个过程中会要用到很多的zend api 从这些api入手就能理解Php是怎么给用户提供各种工具和函数了&lt;/p&gt;
&lt;p&gt;至于eebook我之前记得说过它有一个不好的地方是把现象当成了定律&lt;/p&gt;
&lt;p&gt;比如refcount refcount只是用来做垃圾回收&lt;/p&gt;
&lt;p&gt;不是说一定的代码下refcount就一定是几 只要能保证垃圾回收是几并不重要&lt;/p&gt;
&lt;p&gt;所以，少看，多动手 带着问题去研究，会很有意思 over：）&lt;/p&gt;
&lt;p&gt;再加一句，PHP7开始，代码变化很大，很多优化的思想在里面，值得一读：）&lt;/p&gt;
&lt;p&gt;另外，要搞清楚为啥读源码，是为了学习、学习啥呢？ 如果学习网络编程，那读fpm部分，或者cli部分&lt;/p&gt;
&lt;p&gt;如果是共享内存那就opcache部分 之类的&lt;/p&gt;
&lt;p&gt;慢慢积累，不是说读PHP的源代码只是为了了解PHP&lt;/p&gt;
&lt;p&gt;你读多了、C下面的各种东东就都熟了、那里都用得着的[呲牙]&lt;/p&gt;
&lt;p&gt;反正，多读源码是有好处的，无论是是PHP还是其他的项目&lt;/p&gt;
&lt;p&gt;我唯一的建议是尽量读c项目 别读c++的 后者太那啥了[偷笑] - 惠新宸&lt;/p&gt;
&lt;p&gt;【分享链接】&lt;/p&gt;
&lt;p&gt;1. 京东618 ｜ Docker扛大旗，弹性伸缩成重点 &lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;amp;mid=207702375&amp;amp;idx=1&amp;amp;sn=248f2599f35a9bf6fb3c6aad149fd41d&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://mp.weixin.qq.com/s?__biz=MjM5MDE0Mjc4MA==&amp;amp;mid=207702375&amp;amp;idx=1&amp;amp;sn=248f2599f35a9bf6fb3c6aad149fd41d&lt;/a&gt; - 黑夜路人&lt;/p&gt;
&lt;p&gt;2. 是时候给糟糕的技术面试来场革命了 &lt;a href=&quot;http://www.codeceo.com/article/the-terrible-technical-interview.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.codeceo.com/article/the-terrible-technical-interview.html&lt;/a&gt; - 马犇&lt;/p&gt;
&lt;p&gt;3. 许式伟：十一年逆流顺流，首席架构师到CEO &lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5MjE3NDA1Mw==&amp;amp;mid=201422576&amp;amp;idx=1&amp;amp;sn=909981e0cf0fba99d154f17c56972c41&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://mp.weixin.qq.com/s?__biz=MjM5MjE3NDA1Mw==&amp;amp;mid=201422576&amp;amp;idx=1&amp;amp;sn=909981e0cf0fba99d154f17c56972c41&lt;/a&gt; - phperzone&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;【今日话题】&lt;/p&gt;
&lt;p&gt;怎么学习或者阅读PHP源码？ - kdrol.li&lt;/p&gt;
&lt;p&gt;1. 学习别人的源代码phpstorm等好用的IDE是必备利器，方便追踪查看 - 杨恒飞&lt;/p&gt;
&lt;p&gt;2. 这个源码指的是PHP的C源码吧，首先C基础是必须要掌握的，初学我个人建
    
    </summary>
    
    
      <category term="PHP" scheme="http://www.dyike.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>谈谈“高校毕业生将达749万”的一些感想</title>
    <link href="http://www.dyike.com/2015/06/20/%E8%B0%88%E6%AF%95%E4%B8%9A%E6%84%9F%E6%83%B3/"/>
    <id>http://www.dyike.com/2015/06/20/谈毕业感想/</id>
    <published>2015-06-20T14:31:30.000Z</published>
    <updated>2016-04-15T10:23:48.000Z</updated>
    
    <content type="html">&lt;p&gt;前天看到一个新闻“2015年的高校毕业生将达到749万，留在一线城市的门槛提高了”，看到这个新闻后，我在想就业压力不能用“相当的大”来形容了，而是相当的严峻相当的严峻相当的严峻。&lt;/p&gt;
&lt;p&gt;然后又想到了一年后现在的自己可能也会面临这样的问题，必须面临找工作。还记得之前看到过一个规定，就是说留京的应届本科毕业生不能超过24岁，研究生不超过27岁。卧槽，我毕业那年正好24岁，早知道当年不复读了。还记得当时把这个规定分享到微信朋友圈了，然后就有在下面评论说“少年，只要你是一个人才，年龄不是问题，得留住你在北京”。想想自己来到北京求学的这几年，确实看到了一些别人没看到的东西，回去了同学都说我接触的平台、看到的视野跟他们完全不一样。这点我确实也感受到了，每每这样想的时候，自己都很欣慰当年填报志愿的时候选择了北上广。当初对自己的目标就是我读大学就是要走出去看看，看看大城市究竟会有哪些不一样的。大城市，接触的人更多了，什么样的人都有，想要得到成长，需要跟各式各样的三教九流打交道。资源也丰富了，还记得当年刚来北京还办了张首都图书馆的会员卡，虽然没怎么借书，但是觉得只有大城市才会提供这么好的资源。机会相对来说多了，我这里说的是相对，其实竞争压力也是蛮大，因为比我优秀的人太多太多了，说白了自己就算个屁，有的时候连个屁都不算，那你还凭什么去跟别人竞争那一个机会呢？&lt;/p&gt;
&lt;p&gt;还是说说毕业生人数吧，先看一张2015年之前的数据你就知道这是一个什么概念。&lt;a href=&quot;http://blog.dyike.com/wp-content/uploads/2015/06/p.jpg&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://www.dyike.com/wp-content/uploads/2015/06/p-300x166.jpg&quot; alt=&quot;picture&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在我读大学后，我更有机会接触到这些数据了，但每年都看到“今年参加高考的人数减少百分之多少”高考的人数逐年减少，有的时候也挺羡慕他们（学弟学妹）感觉他们上大学的机会比我们越来越大，他们毕业时的压力应该没我们现在的压力这么大吧。2015年，自己也有好多同学大学毕业了，他们有的跟我聊，投了好多好多简历，面了好多好多家公司，最后也没有找到工作甚至是自己并不满意的工作。现实就是这么残酷，只有自己比别人更优秀才可能获得更好的机会，机会都是留给准备充分的人。给一年后的自己做准备吧。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首先得清楚自己想要干什么，今后没什么特殊的应该是从事互联网相关的工作，主要原因这几年互联网发展确实如火如荼的，就业机会相对要好一点，还有自己大学学的就是这方面的专业，你不从事这个那从事哪个。不浪费时间在选择上，趁早做好选择并为自己的选择做准备。&lt;/li&gt;
&lt;li&gt;其次，还有一年的时间，自己可能需要找工作【现在既希望自己能考上研究生，又希望自己考不上研究生】，得了解自己所要面临的工作是什么样的，所要哪些基础的技能，或许要做的就是查漏补缺吧。举个例子，面试哪家公司的工程师，不妨可以根据这家公司的招聘信息的要求认清自己是在一个什么样的水平。还有就是不要再看什么传统的招聘网站，智联前程无忧啥的，海投也没有什么乱用。不妨看看垂直的招聘，多利用好社交网络。找一家正规的公司也是很重要的。&lt;/li&gt;
&lt;li&gt;还有，就是不要眼高手低，觉得自己就是要去BAT这样的大公司，不妨选择一个小公司，选择一个优秀的小团队，这样的自己应该更能得到更好的成长。选择了互联网行业，那还是选择大城市北上广深相对发展好点机会多点。&lt;/li&gt;
&lt;li&gt;最后说说能力上的吧，自己这一年里应该更好的学好计算机相关的基础知识，像什么操作系统、数据结构、数据库原理等基础课程，掌握好几种计算机编程语言，如C语言、PHP、Golang等等，还有熟练使用一些工具，多阅读英文书籍，提供英文水平。能用Google搜索东西，尽量查找英文类的，为什么这样就不多说了。学会写一个好Email，整好一个站点多写写技术博客，有能力话再折腾个手机App。&lt;br&gt;最后的最后，谈谈关于研究生的事。之前我一直是不赞成考研这个事，但现在我也在准备考研这个事。你就不要问这是什么原因。现在我还是那个观点，考研也不是一个很好的，考研了你就能找到一个好的工作？如果出于为了找工作的话，那真的没有必要考研，如果为了学术研究的，不放试一试。我相信我考研的目的应该跟常人应该不一样。。。。。。不说了，努力一把，还是那句话【既希望考上，又希望考不上】。&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;前天看到一个新闻“2015年的高校毕业生将达到749万，留在一线城市的门槛提高了”，看到这个新闻后，我在想就业压力不能用“相当的大”来形容了，而是相当的严峻相当的严峻相当的严峻。&lt;/p&gt;
&lt;p&gt;然后又想到了一年后现在的自己可能也会面临这样的问题，必须面临找工作。还记得之前看
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Go语言学习笔记【第三目：内建函数】</title>
    <link href="http://www.dyike.com/2015/06/19/go%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B03/"/>
    <id>http://www.dyike.com/2015/06/19/go学习笔记3/</id>
    <published>2015-06-19T14:37:07.000Z</published>
    <updated>2016-04-15T10:01:38.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;内建函数&quot;&gt;&lt;a href=&quot;#内建函数&quot; class=&quot;headerlink&quot; title=&quot;内建函数&quot;&gt;&lt;/a&gt;&lt;strong&gt;内建函数&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;预定义了少数函数，这意味着无需引用任何包就可以使用它们。下面的表格列出了所有的内建函数。&lt;/p&gt;
&lt;p&gt;Table Go中的预定义函数&lt;/p&gt;
&lt;table&gt;&lt;br&gt;&lt;tbody&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;138&quot;&gt;close&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;138&quot;&gt;new&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;138&quot;&gt;panic&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;138&quot;&gt;complex&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;138&quot;&gt;delete&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;138&quot;&gt;make&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;138&quot;&gt;recover&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;138&quot;&gt;real&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;138&quot;&gt;len&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;138&quot;&gt;append&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;138&quot;&gt;print&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;138&quot;&gt;imag&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;138&quot;&gt;cap copy&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;138&quot;&gt;println&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;138&quot;&gt;&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;138&quot;&gt;&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;/tbody&gt;&lt;br&gt;&lt;/table&gt;

&lt;p&gt;Close&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;用于 channel 通讯。使用它来关闭 channel
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;p&gt;delete&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;用于在 map 中删除实例
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;p&gt;len 和 cap&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;可用于不同的类型，len 用于返回字符串、slice 和数组的长度
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;p&gt;new&lt;/p&gt;
&lt;p&gt;用于各种类型的内存分配&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;make&lt;/p&gt;
&lt;p&gt;用于内建类型（map、slice 和 channel）的内存分配&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;copy&lt;/p&gt;
&lt;p&gt;用于复制 slice&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;append&lt;/p&gt;
&lt;p&gt;用于追加 slice&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;panic 和 recover&lt;/p&gt;
&lt;p&gt;用于异常处理机制&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;print 和 println&lt;/p&gt;
&lt;p&gt;是底层打印函数，可以在不引入  fmt 包的情况下使用。它们主要用于调试&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;complex、real 和 imag&lt;/p&gt;
&lt;p&gt;全部用于处理 复数。有了之前给的简单的例子，不用再进一步讨论复数了&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;array、slices 和 map&lt;/p&gt;
&lt;p&gt;可以利用 array 在列表中进行多个值的排序，或者使用更加灵活的：slice。字典或哈希 类型同样可以使用，在Go中叫做map&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;array&lt;/p&gt;
&lt;p&gt;array 由 [n]&amp;lt;type&amp;gt; 定义，n 标示 array 的长度，而 &amp;lt;type&amp;gt; 标示希望存储的内容的类 型。对 array 的元素赋值或索引是由方括号完成的：&lt;/p&gt;
&lt;p&gt;`var arr [10] int&lt;/p&gt;
&lt;p&gt;arr[0] = 42&lt;/p&gt;
&lt;p&gt;arr[1] = 13&lt;/p&gt;
&lt;p&gt;fmt.Printf(“The first element is %d\n”, arr[0])`&lt;/p&gt;
&lt;p&gt;像var arr = [10]int 这样的数组类型有固定的大小。大小是类型的一部分。由于不同的大小是不同的类型，因此不能改变大小。数组同样是值类型的：将一个数组赋值给另一个数组，会复制所有的元素。尤其是当向函数内传递一个数组的时候，它会获 得一个数组的副本，而不是数组的指针。&lt;/p&gt;
&lt;p&gt;可以像这样声明一个数组：var a [3]int，如果不使用零来初始化它，则用复合声明： a := [3]int{1, 2, 3} 也可以简写为 a := […]int{1, 2, 3}，Go会自动统计元素的个数。&lt;/p&gt;
&lt;p&gt;注意，所有项目必须都指定。因此，如果你使用多维数组，有一些内容你必须录入：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;a := [3][2] int {  [2] int { 1,2 }, [2] int { 3,4 }, [2] int { 5,6 }  }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;类似于：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;a := [3][2] int {  [...] int { 1,2 }, [...] int { 3,4 }, [...] int { 5,6 }  }&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;声明一个 array 时，你必须在方括号内输入些内容，数字或者三个点 (…)。&lt;/p&gt;
&lt;p&gt;array、slice 和 map 的复合声明变得更加简单。使用复合声明的 array、slice和 map，元素复合声明的类型与外部一致，则可以省略。&lt;/p&gt;
&lt;p&gt;这表示上面的例子可以修改为：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;a := [3][2] int {  { 1,2 }, { 3,4 }, { 5,6 }  }&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;slice&lt;/p&gt;
&lt;p&gt;slice 与 array 接近，但是在新的元素加入的时候可以增加长度。slice 总是指向底层的一个array。slice 是一个指向 array 的指针，这是其与array不同的地方；slice 是引用类型，这意味着当赋值某个 slice 到另外一个变量，两个引用会指向同一个 array。例如，如果一个函数需要一个slice 参数，在其内对slice元素的修改也会体现在函数调用者中，这和传递底层的array指针类似。通过：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sl := make([] int , 10)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;创建了一个保存有10个元素的slice。需要注意的是底层的 array 并无不同。slice 总 是与一个固定长度的 array 成对出现。其影响 slice 的容量和长度。&lt;/p&gt;
&lt;p&gt;给定一个 array 或者其他 slice，一个新 slice 通过 a[I:J] 的方式创建。这会创建一个 新的 slice，指向变量a，从序号 I 开始，结束在序号 J 之前。长度为 J - I。&lt;/p&gt;
&lt;p&gt;// array[n:m] 从 array 创建了一个  slice，具有元素  n 到 m-1&lt;/p&gt;
&lt;p&gt;`a := […] int { 1, 2, 3, 4, 5 }&lt;/p&gt;
&lt;p&gt;s1 := a[2:4]&lt;/p&gt;
&lt;p&gt;s2 := a[1:5]&lt;/p&gt;
&lt;p&gt;s3 := a[:]&lt;/p&gt;
&lt;p&gt;s4 := a[:4]&lt;/p&gt;
&lt;p&gt;s5 := s2[:]`&lt;/p&gt;
&lt;p&gt;2  定义一个 5 个元素的 array，序号从 0 到 4；&lt;/p&gt;
&lt;p&gt;3  从序号 2 至 3 创建 slice，它包含元素 3, 4；&lt;/p&gt;
&lt;p&gt;4  从序号 1 至 4 创建，它包含元素 2, 3, 4, 5；&lt;/p&gt;
&lt;p&gt;5  用 array 中的所有元素创建 slice，这是 a[0:len(a)] 的简化写法；&lt;/p&gt;
&lt;p&gt;6  从序号 0 至 3 创建，这是 a[0:4] 的简化写法，得到 1, 2, 3, 4；&lt;/p&gt;
&lt;p&gt;7  从 slice s2 创建 slice，注意 s5 仍然指向 array a。&lt;/p&gt;
&lt;p&gt;函数 append 向 slice s 追加零值或其他 x 值，并且返回追加后的新的、与 s 有相同类型的 slice。如果 s 没有足够的容量存储追加的值，append 分配一 个足够大的、新的 slice 来存放原有 slice 的元素和追加的值。因此，返回 的 slice 可能指向不同的底层 array。&lt;/p&gt;
&lt;p&gt;`s0 := [] int { 0, 0 }&lt;/p&gt;
&lt;p&gt;s1 := append(s0, 2) //0&lt;/p&gt;
&lt;p&gt;s2 := append(s1, 3, 5, 7) //1&lt;/p&gt;
&lt;p&gt;s3 := append(s2, s0…) //2`&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;map&lt;/p&gt;
&lt;p&gt;许多语言都内建了类似的类型， 例如 Perl 有哈希， Python 有字典， 而 C++ 同样也 有map（作为库）。在Go中有 map 类型。map 可以认为是一个用字符串做索引的数 组（在其最简单的形式下）。下面定义了 map 类型，用于将 string （月的缩写）转换 为 int – 那个月的天数。一般定义 map 的方法是：map[&amp;lt;from type&amp;gt;]&amp;lt;to type&amp;gt;&lt;/p&gt;
&lt;p&gt;`monthdays := map[ string] int {&lt;/p&gt;
&lt;p&gt;“Jan”: 31, “Feb”:  28, “Mar”: 31,&lt;/p&gt;
&lt;p&gt;“Apr”:30, “May”: 31, “Jun”:  30,&lt;/p&gt;
&lt;p&gt;“Jul”:  31, “Aug”: 31, “Sep”:  30,&lt;/p&gt;
&lt;p&gt;“Oct”:       31, “Nov”: 30, “Dec”:  31,     //逗号是必须的&lt;/p&gt;
&lt;p&gt;}`&lt;/p&gt;
&lt;p&gt;留意，当只需要声明一个 map 的时候，使用 make 的形式：monthdays := make(map[string]int)&lt;/p&gt;
&lt;p&gt;当在map中索引（搜索）时，使用方括号。例如打印出 12 月的天数：fmt.Printf(“%d\n”, monthdays[“Dec”])&lt;/p&gt;
&lt;p&gt;当对 array、slice、string 或者 map 循环遍历的时候，range 会帮助你，每次调用，它都会返回一个键和对应的值。&lt;/p&gt;
&lt;p&gt;`year := 0&lt;/p&gt;
&lt;p&gt;for &lt;em&gt; , days := range  monthdays {    //键没有使用，因此用 &lt;/em&gt;, days&lt;/p&gt;
&lt;p&gt;year += days&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;fmt.Printf(“Numbers of days in a year: %d\n”, year)`&lt;/p&gt;
&lt;p&gt;向 map 增加元素，可以这样做：&lt;/p&gt;
&lt;p&gt;`monthdays[“Undecim”] = 30    //添加一个月&lt;/p&gt;
&lt;p&gt;monthdays[“Feb”]       = 29            // ‰年时重写这个元素`&lt;/p&gt;
&lt;p&gt;检查元素是否存在，可以使用下面的方式 ：&lt;/p&gt;
&lt;p&gt;`var  value int&lt;/p&gt;
&lt;p&gt;var  present bool&lt;/p&gt;
&lt;p&gt;value, present = monthdays[“Jan”]    //如果存在，present 则有值 true&lt;/p&gt;
&lt;p&gt;//或者更接近 Go 的方式&lt;/p&gt;
&lt;p&gt;v, ok := monthdays[“Jan”]           //“逗号 ok”形式  `&lt;/p&gt;
&lt;p&gt;也可以从 map 中移除元素：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;delete(monthdays, &amp;quot;Mar&amp;quot;)      //删除”Mar”  吧，总是下雨的月份&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;通常来说语句 delete(m, x) 会删除 map 中由 m[x] 建立的实例。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;内建函数&quot;&gt;&lt;a href=&quot;#内建函数&quot; class=&quot;headerlink&quot; title=&quot;内建函数&quot;&gt;&lt;/a&gt;&lt;strong&gt;内建函数&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;预定义了少数函数，这意味着无需引用任何包就可以使用它们。下面的表格列出了所有的内建函数。&lt;
    
    </summary>
    
    
      <category term="Golang" scheme="http://www.dyike.com/tags/Golang/"/>
    
  </entry>
  
  <entry>
    <title>Go语言学习笔记【第二目：运算符、控制结构】</title>
    <link href="http://www.dyike.com/2015/06/19/go%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02/"/>
    <id>http://www.dyike.com/2015/06/19/go学习笔记2/</id>
    <published>2015-06-19T14:06:46.000Z</published>
    <updated>2016-04-15T09:58:04.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;运算符&quot;&gt;&lt;a href=&quot;#运算符&quot; class=&quot;headerlink&quot; title=&quot;运算符&quot;&gt;&lt;/a&gt;&lt;strong&gt;运算符&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;Go支持普通的数字运算符，下面的表格列出了当前支持的运算符，以及其优先级。它们全部是从左到右结合的。&lt;/p&gt;
&lt;p&gt;Table运算优先级&lt;/p&gt;
&lt;table&gt;&lt;br&gt;&lt;tbody&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;113&quot;&gt;Precedence&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;236&quot;&gt;Operator(s)&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td rowspan=&quot;6&quot; width=&quot;113&quot;&gt;Highest&amp;nbsp;&lt;br&gt;&lt;br&gt;&amp;nbsp;&lt;br&gt;&lt;br&gt;&amp;nbsp;&lt;br&gt;&lt;br&gt;&amp;nbsp;&lt;br&gt;&lt;br&gt;Lowest&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;236&quot;&gt;&lt;em&gt;     /     %    &amp;lt;&amp;lt;  &amp;gt;&amp;gt;  &amp;amp;    &amp;amp;^&lt;/em&gt;&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;236&quot;&gt;+     -      | ^&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;236&quot;&gt;==  !=   &amp;lt;     &amp;lt;=  &amp;gt;     &amp;gt;=&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;236&quot;&gt;&amp;lt;-&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;236&quot;&gt;&amp;amp;&amp;amp;&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;236&quot;&gt;||&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;/tbody&gt;&lt;br&gt;&lt;/table&gt;&lt;br&gt;+ -  / 和 % 会像你期望的那样工作，&amp;amp; | ^ 和 &amp;amp;^ 分别表示位运算符按位与，按位或，按位异或和位清除。&amp;amp;&amp;amp;和||运算符是逻辑与和逻辑或。表格中没有列出的是逻辑非：!。&lt;br&gt;&lt;br&gt;虽然Go不支持运算符重载（或者方法重载），而一些内建运算符却支持重载。例如 + 可以用于整数、浮点数、复数和字符串（字符串相加表示串联它们）。&lt;br&gt;&lt;br&gt;&amp;nbsp;&lt;br&gt;&lt;br&gt;&lt;em&gt; &lt;/em&gt; &lt;em&gt;&lt;br&gt;&lt;br&gt;&amp;nbsp;&lt;br&gt;&lt;br&gt;## &lt;em&gt;*Go 关键字&lt;/em&gt;&lt;/em&gt;&lt;br&gt;&lt;br&gt;Table  Go中的关键字&lt;br&gt;&lt;table&gt;&lt;br&gt;&lt;tbody&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;111&quot;&gt;break&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;111&quot;&gt;default&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;111&quot;&gt;func&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;111&quot;&gt;interface&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;111&quot;&gt;select&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;111&quot;&gt;case&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;111&quot;&gt;defer&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;111&quot;&gt;go&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;111&quot;&gt;map&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;111&quot;&gt;struct&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;111&quot;&gt;chan&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;111&quot;&gt;else&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;111&quot;&gt;goto&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;111&quot;&gt;package&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;111&quot;&gt;switch&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;111&quot;&gt;const&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;111&quot;&gt;fallthrough&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;111&quot;&gt;if&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;111&quot;&gt;range&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;111&quot;&gt;type&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;tr&gt;&lt;br&gt;&lt;td width=&quot;111&quot;&gt;continue&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;111&quot;&gt;for&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;111&quot;&gt;import&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;111&quot;&gt;return&lt;/td&gt;&lt;br&gt;&lt;td width=&quot;111&quot;&gt;var&lt;/td&gt;&lt;br&gt;&lt;/tr&gt;&lt;br&gt;&lt;/tbody&gt;&lt;br&gt;&lt;/table&gt;

&lt;ul&gt;
&lt;li&gt;func 用于定义函数和方法；&lt;/li&gt;
&lt;li&gt;return 用于从函数返回；&lt;/li&gt;
&lt;li&gt;go用于并行；&lt;/li&gt;
&lt;li&gt;select用于选择不同类型的通讯；&lt;/li&gt;
&lt;li&gt;interface；&lt;/li&gt;
&lt;li&gt;struct 用于抽象数据类型；&lt;br&gt;&amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;h2 id=&quot;控制结构&quot;&gt;&lt;a href=&quot;#控制结构&quot; class=&quot;headerlink&quot; title=&quot;控制结构&quot;&gt;&lt;/a&gt;&lt;strong&gt;控制结构&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;在Go中只有很少的几个控制结构。例如这里没有do或者while循环，只有for。有灵活的switch语句和if，而switch接受像for那样可选的初始化语句。还有叫做&lt;strong&gt;类型选择和多路通讯转接器的**&lt;/strong&gt; select&lt;strong&gt;。语法有所不同（同 C 相比）： &lt;/strong&gt;无需圆括号，而语句体必须总是包含在大括号内。**&lt;/p&gt;
&lt;p&gt;if-eles&lt;/p&gt;
&lt;p&gt;在 Go 中 if 看起来是这样的：&lt;/p&gt;
&lt;p&gt;`i f   x &amp;gt; 0 {                    //{ 是强制的&lt;/p&gt;
&lt;p&gt;return  y&lt;/p&gt;
&lt;p&gt;}   else  {&lt;/p&gt;
&lt;p&gt;return  x&lt;/p&gt;
&lt;p&gt;}`&lt;/p&gt;
&lt;p&gt;强制大括号鼓励将简单的 if 语句写在多行上。无论如何，这都是一个很好的形式，尤其是语句体中含有控制语句，例return或者break。&lt;/p&gt;
&lt;p&gt;if 和 switch 接受初始化语句，通常用于设置一个（局部）变量。&lt;/p&gt;
&lt;p&gt;`i f err := Chmod(0664) ; err != nil {        ← nil与C的NULL类似&lt;/p&gt;
&lt;p&gt;fmt.Printf(err)        ← err 的作用域被限定在if内&lt;/p&gt;
&lt;p&gt;return  err&lt;/p&gt;
&lt;p&gt;}`&lt;/p&gt;
&lt;p&gt;可以像通常那样使用逻辑运算符：&lt;/p&gt;
&lt;p&gt;`i f  true &amp;amp;&amp;amp; true   {&lt;/p&gt;
&lt;p&gt;fmt.Println(“true”)&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;i f  ! false {&lt;/p&gt;
&lt;p&gt;fmt.Println(“true”)&lt;/p&gt;
&lt;p&gt;}`&lt;/p&gt;
&lt;p&gt;在Go库中，你会发现当一个if语句不会进入下一个语句流程–也就是说，语句体结束于 break，continue，goto或者return–不必要的 else会被省略。&lt;br&gt;`&lt;br&gt;f, err := os.Open(name, os.O_RDONLY, 0)&lt;/p&gt;
&lt;p&gt;i f err != nil {&lt;/p&gt;
&lt;p&gt;return  err&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;doSomething(f)`&lt;/p&gt;
&lt;p&gt;这个例子通常用于检测可能的错误序列。成功的流程一直执行到底部使代码很好读，当遇到错误的时候就排除它。这样错误的情况结束于 return 语句，这样就无须else语句。&lt;/p&gt;
&lt;p&gt;`f, err := os.Open(name, os.O_RDONLY, 0)&lt;/p&gt;
&lt;p&gt;i f err != nil { return  err&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;d, err := f.Stat()&lt;/p&gt;
&lt;p&gt;i f err != nil { return  err&lt;/p&gt;
&lt;p&gt;}`&lt;/p&gt;
&lt;p&gt;doSomething(f, d)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;nbsp;&lt;br&gt;下面的语法在 Go 中是非法的：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;`i f   err != nil&lt;/p&gt;
&lt;p&gt;{                          &lt;strong&gt;  **&lt;/strong&gt;←&lt;strong&gt;&lt;strong&gt;必须同&lt;/strong&gt;&lt;/strong&gt; if &lt;strong&gt;**在同一行&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;return  err&lt;/p&gt;
&lt;p&gt;}`&lt;/p&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;h3 id=&quot;goto&quot;&gt;&lt;a href=&quot;#goto&quot; class=&quot;headerlink&quot; title=&quot;goto&quot;&gt;&lt;/a&gt;&lt;strong&gt;goto&lt;/strong&gt;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;用 goto 跳转到一定是当前函数内定义的标签。例如假设这样一个循环：&lt;br&gt;`func  myfunc() {&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;i := 0&lt;/p&gt;
&lt;p&gt;Here:         ← 这行的第一个词，以分号结束作为标签&lt;/p&gt;
&lt;p&gt;println(i) i++&lt;/p&gt;
&lt;p&gt;goto  Here      ← 跳转&lt;/p&gt;
&lt;p&gt;}`&lt;/p&gt;
&lt;p&gt;标签名是大小写敏感的。&lt;/p&gt;
&lt;h3 id=&quot;for&quot;&gt;&lt;a href=&quot;#for&quot; class=&quot;headerlink&quot; title=&quot;for&quot;&gt;&lt;/a&gt;&lt;strong&gt;for&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;Go 的 for 循环有三种形式，只有其中的一种使用分号。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;del&gt;&lt;em&gt;for  init ;   condition ;   post {   }      ← 和 C 的 for 一样&lt;/em&gt;&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;&lt;del&gt;&lt;em&gt;for  condition {    }              ← 和 while 一样&lt;/em&gt;&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;&lt;del&gt;&lt;em&gt;for   {   }                 ← 死循环&lt;/em&gt;&lt;/del&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;短声明使得在循环中声明一个序号变量更加容易。&lt;/p&gt;
&lt;p&gt;`sum := 0&lt;/p&gt;
&lt;p&gt;for  i := 0 ;   i &amp;lt; 10 ;   i++ {&lt;/p&gt;
&lt;p&gt;sum += i              ← sum = sum + i 的简化写法&lt;/p&gt;
&lt;p&gt;}             ← i 实例在循环结束会消失`&lt;/p&gt;
&lt;p&gt;最后，由于Go没有逗号表达式，而 ++ 和–是语句而不是表达式，如果你想在 for 中 执行多个变量，应当使用平行赋值。&lt;/p&gt;
&lt;p&gt;`// Reverse a&lt;/p&gt;
&lt;p&gt;for i, j := 0, len(a)-1 ; i &amp;lt; j ; i, j = i+1, j-1 {&lt;/p&gt;
&lt;p&gt;a[i], a[j] = a[j], a[i]      ← 平行赋值&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;h3 id=&quot;break-和-continue&quot;&gt;&lt;a href=&quot;#break-和-continue&quot; class=&quot;headerlink&quot; title=&quot;break 和 continue&quot;&gt;&lt;/a&gt;&lt;strong&gt;break 和 continue&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;利用 break 可以提前退出循环，break 终止当前的循环。&lt;/p&gt;
&lt;p&gt;for  i := 0 ;   i &amp;lt; 10 ;   i++ { i f   i &amp;gt; 5 {&lt;/p&gt;
&lt;p&gt;break   ← 终止这个循环，只打印 0 到 5&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;println(i)&lt;/p&gt;
&lt;p&gt;}`&lt;/p&gt;
&lt;p&gt;循环嵌套循环时，可以在break后指定标签。用标签决定哪个循环被终止：&lt;/p&gt;
&lt;p&gt;`J:    for j := 0 ;   j &amp;lt; 5 ;   j++ {&lt;/p&gt;
&lt;p&gt;for i := 0 ;   i &amp;lt; 10 ;   i++ {&lt;/p&gt;
&lt;p&gt;i f  i &amp;gt; 5 {&lt;/p&gt;
&lt;p&gt;break  J    ← 现在终止的是 j 循环，而不是 i 的那个&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;println(i)&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;}`&lt;/p&gt;
&lt;p&gt;利用continue 让循环进入下一个迭代，而略过剩下的所有代码。下面循环打印了0到 5。&lt;/p&gt;
&lt;p&gt;`for i := 0 ;  i &amp;lt; 10 ;   i++ {&lt;/p&gt;
&lt;p&gt;i f  i &amp;gt; 5 {&lt;/p&gt;
&lt;p&gt;continue      ← 跳过循环中所有的代码println(i)`&lt;/p&gt;
&lt;h3 id=&quot;range&quot;&gt;&lt;a href=&quot;#range&quot; class=&quot;headerlink&quot; title=&quot;range&quot;&gt;&lt;/a&gt;&lt;strong&gt;range&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;关键字**&lt;/strong&gt; range &lt;strong&gt;**可用于循环&lt;/strong&gt;。它可以在 slice、array、string、map 和 channel。range是个迭代器，当被调用的时候，从它循环的内容中返回一个键值对。基于不同的内容，range返回不同的东西。&lt;/p&gt;
&lt;p&gt;当对slice 或者array做循环时，range 返回序号作为键，这个序号对应的内容作为值。考虑这个代码：&lt;/p&gt;
&lt;p&gt;`list := [] string {“a”, “b”, “c”, “d”, “e”, “f”}&lt;/p&gt;
&lt;p&gt;for  k, v := range  list {&lt;/p&gt;
&lt;p&gt;// 对  k 和  v 做想做的事情&lt;/p&gt;
&lt;p&gt;}`&lt;/p&gt;
&lt;p&gt;1  创建一个字符串的 slice。&lt;/p&gt;
&lt;p&gt;2 用range对其进行循环。每一个迭代，range 将返回 int 类型的序号，string类型的值，以0和“a”开始。&lt;/p&gt;
&lt;p&gt;3  k 的值为 0…5，而v在循环从“a”…“f”。&lt;/p&gt;
&lt;p&gt;也可以在字符串上直接使用range。这样字符串被打散成独立的 Unicode 字符并且 起始位按照 UTF-8 解析。&lt;/p&gt;
&lt;p&gt;【在 UTF-8 世界的字符有时被称作 runes。通常，当人们讨论字符时，多数是指 8 位字符。UTF-8 字符可 能会有 32 位，称作 rune。在这个例子里，char 的类型是 rune。】&lt;/p&gt;
&lt;p&gt;循环：&lt;/p&gt;
&lt;p&gt;`for pos, char := range  “aΦx” {&lt;/p&gt;
&lt;p&gt;fmt.Printf(“character ‘%c’ starts at byte position %d\n”, char, pos)&lt;/p&gt;
&lt;p&gt;}`&lt;/p&gt;
&lt;p&gt;打印&lt;/p&gt;
&lt;p&gt;`character ‘a’ starts at byte position&lt;/p&gt;
&lt;p&gt;character ‘Φ’ starts at byte position&lt;/p&gt;
&lt;p&gt;character ‘x’ starts at byte position      ← Φ took 2 bytes`&lt;/p&gt;
&lt;h3 id=&quot;switch&quot;&gt;&lt;a href=&quot;#switch&quot; class=&quot;headerlink&quot; title=&quot;switch&quot;&gt;&lt;/a&gt;&lt;strong&gt;switch&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;Go的switch非常灵活。表达式不必是常量或整数，执行的过程从上至下，直到找到匹 配项，而如果switch没有表达式，它会匹配true 。这产生一种可能——使用switch编写if-else-if-else判断序列。&lt;/p&gt;
&lt;p&gt;`func unhex(c byte) byte {&lt;/p&gt;
&lt;p&gt;switch  {&lt;/p&gt;
&lt;p&gt;case  ‘0’ &amp;lt;= c &amp;amp;&amp;amp; c &amp;lt;= ‘9’:&lt;/p&gt;
&lt;p&gt;return  c - ‘0’&lt;/p&gt;
&lt;p&gt;case  ‘a’ &amp;lt;= c &amp;amp;&amp;amp; c &amp;lt;= ‘f’:&lt;/p&gt;
&lt;p&gt;return  c - ‘a’ + 10&lt;/p&gt;
&lt;p&gt;case  ‘A’ &amp;lt;= c &amp;amp;&amp;amp; c &amp;lt;= ‘F’:&lt;/p&gt;
&lt;p&gt;return  c - ‘A’ + 10&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;return  0&lt;/p&gt;
&lt;p&gt;}`&lt;/p&gt;
&lt;p&gt;它不会匹配失败后自动向下尝试，但是可以使用fallthrough 使其这样做。 没有fallthrough：&lt;/p&gt;
&lt;p&gt;`switch  i {&lt;/p&gt;
&lt;p&gt;case  0:         // 空的  case 体&lt;/p&gt;
&lt;p&gt;case  1:&lt;/p&gt;
&lt;p&gt;f()       // 当  i == 0 时，f 不会被调用！&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;而这样：&lt;/p&gt;
&lt;p&gt;switch  i {&lt;/p&gt;
&lt;p&gt;case  0:     fallthrough&lt;/p&gt;
&lt;p&gt;case  1:&lt;/p&gt;
&lt;p&gt;f()     // 当  i == 0 时，f 会被调用！&lt;/p&gt;
&lt;p&gt;}`&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;用default 可以指定当其他所有分支都不匹配的时候的行为。&lt;/p&gt;
&lt;p&gt;`switch  i {&lt;/p&gt;
&lt;p&gt;case  0:&lt;/p&gt;
&lt;p&gt;case  1:&lt;/p&gt;
&lt;p&gt;f()&lt;/p&gt;
&lt;p&gt;default:&lt;/p&gt;
&lt;p&gt;g()         // 当  i 不等于  0 或  1 时调用&lt;/p&gt;
&lt;p&gt;}`&lt;/p&gt;
&lt;p&gt;分支可以使用逗号分隔的列表。&lt;/p&gt;
&lt;p&gt;`func shouldEscape(c byte) bool {&lt;/p&gt;
&lt;p&gt;switch  c {&lt;/p&gt;
&lt;p&gt;case  ‘ ‘, ‘?’, ‘&amp;amp;’, ‘=’, ‘#’, ‘+’:   ← , as ”or”&lt;/p&gt;
&lt;p&gt;return  true&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;return  false&lt;/p&gt;
&lt;p&gt;}`&lt;/p&gt;
&lt;p&gt;这里有一个使用两个 switch 对字节数组进行比较的例子：&lt;/p&gt;
&lt;p&gt;`//0&lt;/p&gt;
&lt;p&gt;func  Compare(a, b []byte) int   {&lt;/p&gt;
&lt;p&gt;for i := 0 ; i &amp;lt; len(a) &amp;amp;&amp;amp; i &amp;lt; len(b) ; i++ {&lt;/p&gt;
&lt;p&gt;switch  {&lt;/p&gt;
&lt;p&gt;case  a[i] &amp;gt; b[i]:&lt;/p&gt;
&lt;p&gt;return  1&lt;/p&gt;
&lt;p&gt;case  a[i] &amp;lt; b[i]:&lt;/p&gt;
&lt;p&gt;return  -1&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;switch   {           //1&lt;/p&gt;
&lt;p&gt;case len(a) &amp;lt; len(b):&lt;/p&gt;
&lt;p&gt;return  -1&lt;/p&gt;
&lt;p&gt;case len(a) &amp;gt; len(b):&lt;/p&gt;
&lt;p&gt;return  1&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;return  0       //2&lt;/p&gt;
&lt;p&gt;}&lt;br&gt;`&lt;br&gt;0  比较返回两个字节数组字典数序先后的整数。&lt;/p&gt;
&lt;p&gt;如果 a == b 返回 0，如果 a &amp;lt; b 返回 -1，而如果 a &amp;gt; b 返回+1；&lt;/p&gt;
&lt;p&gt;1  长度不同，则不相等；&lt;/p&gt;
&lt;p&gt;2  字符串相等。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;运算符&quot;&gt;&lt;a href=&quot;#运算符&quot; class=&quot;headerlink&quot; title=&quot;运算符&quot;&gt;&lt;/a&gt;&lt;strong&gt;运算符&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;Go支持普通的数字运算符，下面的表格列出了当前支持的运算符，以及其优先级。它们全部是从左到右结合的
    
    </summary>
    
    
      <category term="Golang" scheme="http://www.dyike.com/tags/Golang/"/>
    
  </entry>
  
  <entry>
    <title>Go语言学习笔记【第一目：变量、类型和关键字，布尔类型，数字类型...】</title>
    <link href="http://www.dyike.com/2015/06/18/go%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01%E4%B8%8A/"/>
    <id>http://www.dyike.com/2015/06/18/go学习笔记1上/</id>
    <published>2015-06-18T14:15:05.000Z</published>
    <updated>2016-04-15T10:33:11.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;变量、类型和关键字&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Go 在语法上有着类 C 的感觉。如果你希望将两个（或更多）语句放在一行书写，它们必须用分号 (’;’) 分隔。&lt;u&gt;一般情况下，你不需要分号。&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;Go 同其他语言不同的地方在于变量的类型在变量名的后面。&lt;/p&gt;
&lt;p&gt;不是：int a，而是 a int。&lt;/p&gt;
&lt;p&gt;当定义了一个变量，它默认赋值为其类型的 null 值。&lt;/p&gt;
&lt;p&gt;在 var a int后，a 的 值为 0。而 var  s string，意味着 s 被赋值为零长度字符串，也就是 “”。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;在&lt;/em&gt;**&lt;/strong&gt;&lt;em&gt; Go &lt;/em&gt;&lt;strong&gt;**&lt;em&gt;中，声明和赋值是两过程，但是可以连在一起。比较下面作用相同的代码片段。&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;用**&lt;/strong&gt; = &lt;strong&gt;**声明&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;`&lt;br&gt;var a int&lt;/p&gt;
&lt;p&gt;var b bool&lt;/p&gt;
&lt;p&gt;a = 15&lt;/p&gt;
&lt;p&gt;b = false`&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;用**&lt;/strong&gt;:= &lt;strong&gt;**声明&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;`a := 15&lt;/p&gt;
&lt;p&gt;b := false`&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;在左边使用了关键字 var 声明变量，然后赋值给它。右边的代码使用了 := 使得在一 步内完成了声明和赋值&lt;strong&gt;&lt;u&gt;（这一形式只可用在函数内）&lt;/u&gt;&lt;/strong&gt;。在这种情况下，变量的类型是由值推演出来的。值15表示是int 类型，值false告诉Go 它的类型应当是bool。多个var 声明可以成组；const 和import 同样允许这么做。留意圆括号的使用：&lt;/p&gt;
&lt;p&gt;`var  (&lt;/p&gt;
&lt;p&gt;x int&lt;/p&gt;
&lt;p&gt;b bool&lt;/p&gt;
&lt;p&gt;)`&lt;/p&gt;
&lt;p&gt;有相同类型的多个变量同样可以在一行内完成声明：var x, y int让x和y都是int类型变量。同样可以使用 平行赋值：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;a, b := 20, 16&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;让a和b都是整数变量，并且赋值 20 给 a，16 给 b。&lt;/p&gt;
&lt;p&gt;一个特殊的变量名是_（下划线）。任何赋给它的值都被丢弃。在这个例子中，将35赋值给b，同时丢弃34。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;_, b := 34, 35&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Go 的编译器对声明却未使用的变量在报错。下面的代码会产生这个错误：声明了i却未使用&lt;/p&gt;
&lt;p&gt;`package   main&lt;/p&gt;
&lt;p&gt;func  main() {&lt;/p&gt;
&lt;p&gt;var  i int&lt;/p&gt;
&lt;p&gt;}&lt;br&gt;`&lt;br&gt;&amp;nbsp;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;布尔类型&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;布尔类型表示由预定义的常量 true 和 false 代表的布尔判定值。布尔类型是 bool。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;数字类型&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Go有众所周知的类型如int，这个类型根据你的硬件决定适当的长度。意味着在32位硬件上，是32位的；在64位硬件上是64位的。&lt;/p&gt;
&lt;p&gt;&lt;del&gt;&lt;em&gt;注意：int是32或64位之一，不会定义成其他值。uint情况相同。&lt;/em&gt;&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;如果你希望明确其长度，你可以使用int32或者uint32。完整的整数类型列表（符号和无符号）是 int8，int16，int32，int64 和 byte，uint8，uint16，uint32， uint64。byte 是 uint8 的别名。浮点类型的值有 ﬂoat32 和 ﬂoat64 （没有 float 类 型）。64  位的整数和浮点数总是 64 位的，即便是在 32 位的架构上。&lt;/p&gt;
&lt;p&gt;需要留意的是这些类型全部都是独立的，并且混合用这些类型向变量赋值会引起编译 器错误，例如下面的代码：&lt;/p&gt;
&lt;p&gt;`package main&lt;/p&gt;
&lt;p&gt;func main()      {&lt;/p&gt;
&lt;p&gt;var a int           // 通用整数类型&lt;/p&gt;
&lt;p&gt;var b int32      // 32 位整数类型&lt;/p&gt;
&lt;p&gt;a = 15&lt;/p&gt;
&lt;p&gt;b = a+ a           // 混合这些类型是非法的&lt;/p&gt;
&lt;p&gt;b = b+ 5           //5 是一个（未定义类型的）常量，所以这没%问题&lt;/p&gt;
&lt;p&gt;}`&lt;/p&gt;
&lt;p&gt;在b=a+a触发一个赋值错误：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;types.go:7: cannot use a + a (type int) as type int32 in assignment&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;赋值可以用八进制、十六进制或科学计数法：077，0xFF，1e3 或者 6.022e23 这些都是合法的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;常量&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;常量在Go中，也就是 constant。它们在编译时被创建，只能是数字、字符串或布尔值；const x = 42 生成x这个常量。可以使用iota生成枚举值。&lt;/p&gt;
&lt;p&gt;`const  (&lt;/p&gt;
&lt;p&gt;a = iota&lt;/p&gt;
&lt;p&gt;b = iota&lt;/p&gt;
&lt;p&gt;)`&lt;/p&gt;
&lt;p&gt;第一个iota 表示为 0，因此a等于0，当iota 再次在新的一行使用时，它的值增加了1，因此b的值是1。&lt;/p&gt;
&lt;p&gt;也可以像下面这样，省略Go重复的= iota：&lt;/p&gt;
&lt;p&gt;`const  (&lt;/p&gt;
&lt;p&gt;a = iota&lt;/p&gt;
&lt;p&gt;b                 // Implicitly b = iota&lt;/p&gt;
&lt;p&gt;)`&lt;/p&gt;
&lt;p&gt;如果需要，可以明确指定常量的类型：&lt;/p&gt;
&lt;p&gt;`const  (&lt;/p&gt;
&lt;p&gt;a = 0                      // Is an int now&lt;/p&gt;
&lt;p&gt;b string  = “0”&lt;/p&gt;
&lt;p&gt;)&lt;br&gt;`&lt;br&gt;&amp;nbsp;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;字符串&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;另一个重要的内建类型是string。赋值字符串的例子：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;s := “Hello World !”&lt;br&gt;字符串在Go中是UTF-8的由双引号（”）包裹的字符序列。如果你使用单引号（’）则 表示一个字符（UTF-8 编码）——这种在Go中不是string。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;u&gt;一旦给变量赋值，字符串就不能修改了：在&lt;/u&gt;**&lt;/strong&gt;&lt;u&gt; Go &lt;/u&gt;&lt;strong&gt;**&lt;u&gt;中字符串是不可变的。&lt;/u&gt;&lt;/strong&gt;从C来的用户， 下面的情况在Go中是非法的。&lt;/p&gt;
&lt;p&gt;`var s string = “hello”&lt;/p&gt;
&lt;p&gt;s[0] = ‘c’                //修改第一个字符为’c’，这会报错`&lt;/p&gt;
&lt;p&gt;在 Go 中实现这个，需要下面的方法：&lt;/p&gt;
&lt;p&gt;`s := “hello”&lt;/p&gt;
&lt;p&gt;c := []rune(s)&lt;/p&gt;
&lt;p&gt;c[0] = ‘c’&lt;/p&gt;
&lt;p&gt;s2 := string(c)&lt;/p&gt;
&lt;p&gt;fmt.Printf(“%s\n”, s2)`&lt;/p&gt;
&lt;p&gt;2转换 s 为 rune 数组；&lt;/p&gt;
&lt;p&gt;3修改数组的第一个元素；&lt;/p&gt;
&lt;p&gt;4 创建新的字符串 s2 保存修改；&lt;/p&gt;
&lt;p&gt;5 用 fmt.Printf 函数输出字符串。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;多行字符串&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;基于分号的置入，你需要小心使用多行字符串。如果这样写：&lt;/p&gt;
&lt;p&gt;`s := “Starting part”&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;“Ending part”`&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;会被转换为：&lt;/p&gt;
&lt;p&gt;`s := “Starting part” ;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;“Ending part” ;`&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是错误的语法，应当这样写：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;s := &amp;quot;Starting part&amp;quot; + &amp;quot;Ending part&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Go就不会在错误的地方插入分号。另一种方式是使用反引号 ` 作为原始字符串符号：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;s :=&lt;/code&gt;Starting part Ending part``&lt;/p&gt;
&lt;p&gt;留意最后一个例子s现在也包含换行。不像转义字符串标识 ，原始字符串标识的值 在引号内的字符是不转义的。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;rune&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Rune是int32的别名。用UTF-8进行编码。这个类型在什么时候使用呢？例如需要遍 历字符串中的字符。可以循环每个字节（仅在使用 US ASCII 编码字符串时与字符等价， 而它们在 Go 中不存在！）。因此为了获得实际的字符，需要使用 rune 类型。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;复数&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Go原生支持复数。它的变量类型是complex128（64位虚数部分）。如果需要小一些的，还有complex64–32位的虚数部分。&lt;/p&gt;
&lt;p&gt;复数写为 re + imi，re是实数部分，im是虚数部分，而i是标记 ’i’  (√−1)。使用复数的一个例子：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;var  c complex64  = 5+5i;fmt.Printf(&amp;quot;Value is: %v&amp;quot;, c)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;将会打印：(5+5i)&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;错误&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;任何足够大的程序或多或少都会需要使用到错误报告。因此Go有为了错误而存在的内建类型，叫做 error。&lt;/p&gt;
&lt;p&gt;var e error 定义了一个error类型的变量e，其的值是nil。这个error 类型是一个接口。&lt;/p&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;变量、类型和关键字&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Go 在语法上有着类 C 的感觉。如果你希望将两个（或更多）语句放在一行书写，它们必须用分号 (’;’) 分隔。&lt;u&gt;一般情况下，你不需要分号。&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;Go 同其他语言不同的地方在于变量的类
    
    </summary>
    
    
      <category term="Golang" scheme="http://www.dyike.com/tags/Golang/"/>
    
  </entry>
  
  <entry>
    <title>PHPCon2015@北京站第一天简要概述</title>
    <link href="http://www.dyike.com/2015/06/06/2015%E5%B9%B4phpconf/"/>
    <id>http://www.dyike.com/2015/06/06/2015年phpconf/</id>
    <published>2015-06-06T14:39:57.000Z</published>
    <updated>2016-04-15T08:48:07.000Z</updated>
    
    <content type="html">&lt;p&gt;好久好久不写东西了。好像学生都是最怕写文档的，有的时候连邮件都是写得比较粗糙。写文档也算是一个能力吧。&lt;/p&gt;
&lt;p&gt;前些日子在一个群里说这个周末有有一个很牛的技术大会，有空的都要去参与一下。然后我一看确实挺牛的——PHPCon China 2015@Beijing，一看有我熟知的技术大牛是大会的讲师，然后就通过万能的朋友圈求得一张票。既然参加了PHPCon就写的东西总结一下吧，毕竟PHCon在北京也是第一次举办（之前都是在上海办的，今年分了北京站上海站）。&lt;/p&gt;
&lt;p&gt;首先说一下，这个PHPCon真是一个“程序员思维的大会”，为什么这么说呢，第一基本都是程序员在讲计算机语言相关的，第二，也是最主要的，就是这个会的时间把控很准很到位。一切都是按照时间流程表走下来的，以前参加什么发布会没一个不推迟时间。也许这就是程序员工程师做事的严谨性。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;今天听得最多的一个字就是“坑”……&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;胡波——《**&lt;/strong&gt;Yaf&lt;strong&gt;&lt;strong&gt;、&lt;/strong&gt;&lt;/strong&gt;Yar&lt;strong&gt;**扩展在手机微博的应用》&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;打头炮上场的是新浪微博的@胡波_讲的是《Yaf、Yar扩展在手机微博的应用》分享了这里面的一些经验和一些“坑”，“坑”就是胡波老师首先提出的，因为有“坑”，胡波老师好像一直站在了一个位置没有移动过，更没有走向舞台的中央。可能原因是他认为中央有一个“坑”。【这只是玩笑】&lt;/p&gt;
&lt;p&gt;首先介绍了微博客户端与底层平台之间的MAPI接口，可以说是微博最大的流量入口，每天近百亿的点击量，QPS峰值远远超过了50W，然而这里面遇到一个“坑”——面向用户需求REST面向接口解耦合。还有就是历史版本的兼容性，目前的版本是PHP5.4，之前是PHP5.3，为什么没有升级到PHP5.5等高版本？升级就会遇到一些“坑”从5.3到5.4遇到的“坑”相对要少一点。听胡老师说今年等PHP 7发布了会升级到PHP 7。接下来讲了框架的使用……【上图吧】&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;陈峰卫——《**&lt;/strong&gt;PHP&lt;strong&gt;**安全编程》&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;接下来的第二场，是陈峰卫老师讲了《PHP安全编程》，结合前段时间发生的一连串的网络安全事件，可知网络安全是不可忽视的，但是有的时候这个可能跟业务需求冲突，必须二选一。不管是某某挖掘机干的，不管是什么手残的程序员干的，安全编程是至关重要的，个人觉得这个需要积累，需要测试。&lt;/p&gt;
&lt;p&gt;下午第一场是韩天峰老师讲的《PHP的异步并行编程》。等放出视频PPT后可以好好琢磨两下膜拜一下大拿。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;李博——《用**&lt;/strong&gt;PHP&lt;strong&gt;&lt;strong&gt;开发微信&lt;/strong&gt;&lt;/strong&gt;APP&lt;strong&gt;**》&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;第二场是@这是李博【侯斯特CTO】老师讲的《用PHP开发微信APP》侯斯特是一家微信公众号开发的第三方平台。微信公众号开发还是挺广泛的，主要原因是一个微信公众号可以算是一个轻应用。首先有一个得说明的是不能说“微信就是手机网页浏览器”，根据李博老师说的那样“聊天的App开放了平台就相当于一个‘操作系统’”，所以说微信公众号开发不是一个简单的事。微信公众号开发对认证的账号和没有认证的账号提供的接口不一样，订阅号跟服务号公众号提供的接口也不一样，这样看的话就是四种组合，所以要做一个第三方的平台，是给好多用户使用，微信开发并没有想象中那么简单。&lt;/p&gt;
&lt;p&gt;微信公众号开发者中心服务器配置一般为：URL+Token&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开发者无法确定公众号是否正确配置了URL和Token&lt;/li&gt;
&lt;li&gt;无法验证用户提供的AppID和AppSecret&lt;/li&gt;
&lt;li&gt;因为需要账号提供AppSecret，无法保证安全&lt;/li&gt;
&lt;li&gt;同时根据微信方面确认，这个方式只为开发者进行程序调试，不会提供更多的支持。&lt;br&gt;微信服务请求不能超过5秒，这是什么回事呢？我们平时聊微信时，如果发送一条消息或者语音，如果超过5秒没有发送出去，就会出现一个红色的感叹号。同样在微信公众号中开发：消息回复，对于每一个POST请求，开发者在响应包中返回特定xml结构，对该消息进行响应（现支持回复文本、图文、语音、视频、音乐）。 微信服务器在5秒内收不到响应会断掉连接。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;保证不超过**&lt;/strong&gt;5&lt;strong&gt;**秒&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;采用Gearman做消息服务，分发任务【了解一下Gearman】&lt;/li&gt;
&lt;li&gt;只保证回复消息的最小开销&lt;/li&gt;
&lt;li&gt;&lt;p&gt;对微信消息的接收域名做特殊的超时处理，并定义超时时的错误信息（空串等）&lt;br&gt;&lt;strong&gt;保证不超过**&lt;/strong&gt;5&lt;strong&gt;&lt;strong&gt;秒——&lt;/strong&gt;&lt;/strong&gt;PHP +Nginx**&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配置fastcgi_connect_timeout，fastcgi_send_timeout,，fastcgi_read_timeout&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Error_page 504/504.htm;&lt;/li&gt;
&lt;li&gt;htm这个文件保持空白（回复空串给微信，这样就不会出现官方提示“公众号暂时无法 提供服务”）【注意，这个只是表面现象，其实并没有保证不超时5秒，这样做只是为了不让微信服务器给提示警报】&lt;/li&gt;
&lt;li&gt;PHP脚本会执行完毕，数据不会丢失。可以用超时队列+客服消息处理&lt;br&gt;&lt;strong&gt;微信公众号开发中插件相关：&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;传统思路：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;仿照Worldpress做插件系统，一个插件一个文件，然后include进来&lt;/li&gt;
&lt;li&gt;你要知道include进来后是顺序执行的&lt;/li&gt;
&lt;li&gt;插件需要用系统的语言来编写，并且要绕过重名和函数……&lt;/li&gt;
&lt;li&gt;插件需要部署在一起&lt;/li&gt;
&lt;li&gt;&lt;p&gt;一旦有fatal error，你懂得……&lt;br&gt;需要改进的是：【新的尝试】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;做一个插件就相当于做一个服务，RPC&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;可顺序执行可并发执行&lt;/li&gt;
&lt;li&gt;插件的编写语言不受限制，都能调用&lt;/li&gt;
&lt;li&gt;不怕报错&lt;/li&gt;
&lt;li&gt;插件与系统可以跨公网通讯【SAE+开放平台】开发者可以贡献自己的力量&lt;br&gt;……【还有微信同步的问题，授权等问题】&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;最后总结一下这些年踩过坑：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;群发后微信会推送针对每一个OPENID的发送情况，挤爆了服务器。因为一个账号可能会有几十万的粉丝，一下子收到这么多消息，妥妥地挤爆服务器。&lt;/li&gt;
&lt;li&gt;一定要采用公众号AppID作为唯一的公众号标识，否则会重复授权。&lt;/li&gt;
&lt;li&gt;微信最近开了图片消息中的图片防盗链，需要特别处理。【我怎么说我转载微信的文章到自己的博客，里面还有图片，结果第二天在博客里看到图片不显示却有一串文字“此图片来自公众号，未经允许不可使用”】&lt;/li&gt;
&lt;li&gt;一定要对每一个微信公众号区分域名，例如$APPID$.mp.weixinhost.com【这个很重要，如果不区分，一旦被举报了，微信可能封杀的是weixinhost.com这个域名,因为这个域名上不止有一个微信公众号，那样其他公众号也会跟着受影响】&lt;br&gt;差不多就是这些了。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最后是关于创业投融资的演讲。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;好久好久不写东西了。好像学生都是最怕写文档的，有的时候连邮件都是写得比较粗糙。写文档也算是一个能力吧。&lt;/p&gt;
&lt;p&gt;前些日子在一个群里说这个周末有有一个很牛的技术大会，有空的都要去参与一下。然后我一看确实挺牛的——PHPCon China 2015@Beijing，一看有
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>【05-20】讨论一下支付系统的功能设计或相关开发经验</title>
    <link href="http://www.dyike.com/2015/05/20/%E6%94%AF%E4%BB%98%E5%BC%80%E5%8F%91%E7%9A%84%E5%88%86%E4%BA%AB/"/>
    <id>http://www.dyike.com/2015/05/20/支付开发的分享/</id>
    <published>2015-05-20T13:08:00.000Z</published>
    <updated>2016-04-15T09:56:21.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;来自黑夜路人技术群讨论分享内容。&quot;&gt;&lt;a href=&quot;#来自黑夜路人技术群讨论分享内容。&quot; class=&quot;headerlink&quot; title=&quot;来自黑夜路人技术群讨论分享内容。&quot;&gt;&lt;/a&gt;来自黑夜路人技术群讨论分享内容。&lt;/h1&gt;&lt;p&gt;【今日话题】&lt;/p&gt;
&lt;p&gt;讨论一下支付系统的功能设计或相关开发经验 - darkmi&lt;/p&gt;
&lt;p&gt;1. 资金的数据库变更最基础要记得使用事务&lt;/p&gt;
&lt;p&gt;然后还有是数据锁问题&lt;/p&gt;
&lt;p&gt;比如一个逻辑是用户购买东西&lt;/p&gt;
&lt;p&gt;先判断用户余额够不够东西价格，如果够就购买，不够就返回错误&lt;/p&gt;
&lt;p&gt;这个时候获取用户余额的时候就要记得对这个用户的资金进行读写锁&lt;/p&gt;
&lt;p&gt;然后整个事务结束后解锁&lt;/p&gt;
&lt;p&gt;这样才不会有脏数据和重复消费 - 轩脉刃&lt;/p&gt;
&lt;p&gt;2. &amp;#x1f633; 性能很差吧 - diwayou@高朋&lt;/p&gt;
&lt;p&gt;回: 不会，又不是锁所有用户账户 - 轩脉刃&lt;/p&gt;
&lt;p&gt;回: 当账号是一个商家的账号 就会有性能问题 如果是个人用户不会有问题 - diwayou@高朋&lt;/p&gt;
&lt;p&gt;回: 好吧，具体场景具体分析了 - 轩脉刃&lt;/p&gt;
&lt;p&gt;3. 安全问题要保证！日志要记录好 - 若凡&lt;/p&gt;
&lt;p&gt;4. 用户资金流水一定要记录，记录订单号，交易金额，账户资金快照，等信息。 - 丁靖&lt;/p&gt;
&lt;p&gt;问: 资金快照是什么？ - lemon…&lt;/p&gt;
&lt;p&gt;回: 就是这次交易后，用户帐户上的资金余额. 如果不是这种业务场景，就不需要记录了 - 丁靖&lt;/p&gt;
&lt;p&gt;5. 问: 主要是分布式事务咋实现好？xopen的两阶段性能太差 - 张勇&lt;/p&gt;
&lt;p&gt;回: 分布式事务不好做啊 如果业务能够接受异步稍微好处理点 如果必需同步 那只能损失性能了&lt;/p&gt;
&lt;p&gt;如果做异步 可能需要分步消耗 例如 1.冻结 准备资源 2.真正消耗&lt;/p&gt;
&lt;p&gt;冻结资源如何释放可以发起方通知 也可以接受放自己超时释放 - diwayou@高鹏&lt;/p&gt;
&lt;p&gt;6. 前一段时间看过支付宝程立之前分享的分布式事务介绍，觉得他们就是自己实现一个事务管理器，事务是业务级别的，每个业务提供tcc操作和提交、回滚。每个数据库都是用的本地事务。&lt;/p&gt;
&lt;p&gt;也就是说每个业务自己实现回滚操作。&lt;/p&gt;
&lt;p&gt;都是2阶段的事务，还有infoq的微信红包的一个演讲也使用的自己实现的2阶段提交。 - 张勇&lt;/p&gt;
&lt;p&gt;7. 自己回滚需要设置好超时时间 最好是主动通知释放 - diwayou@高鹏&lt;/p&gt;
&lt;p&gt;8. 微信的&lt;a href=&quot;http://www.infoq.com/cn/presentations/mobile-Internet-massive-access-system-design&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.infoq.com/cn/presentations/mobile-Internet-massive-access-system-design&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;微信红包的 - 张勇&lt;/p&gt;
&lt;p&gt;9. 大规模SOA系统中的分布事务处事_程立 &lt;a href=&quot;http://wenku[&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://wenku[&lt;/a&gt; baidu&lt;img src=&quot;#94081119&quot; alt=&quot;](http://cdncache-a.akamaihd.net/items/it/img/arrow-10x10.png)&quot; title=&quot;Click to Continue &amp;gt; by DealExpress&quot;&gt;.com/link?url=r6DpwDbFeUG93YX_gpLTlegBirLxu0gst50c50yJ6oYYItSqDn7P1DRtKY5JrYTISCCjalBk6DkE4K-wKVm0VBp8qUUvQVuV1ojoZsTJetC - 张勇&lt;/p&gt;
&lt;p&gt;10. 支付去年我做过，主要是用redis 分布锁+mysql 事务。mysql 分库分表，用户之间隔离，互不影响。&lt;/p&gt;
&lt;p&gt;每天定时对账，报警。- 天天&lt;/p&gt;
&lt;p&gt;11. 能详细点儿不？比如手user1在A库，user2在B库，user1给user2转帐，这种事务怎么处理的？还是不处理靠对账来解决？ - 张勇&lt;/p&gt;
&lt;p&gt;回: 首先，我那个系统不涉及用户间交易。如果用户间，涉及到库事务，这个mysql 暂时做不了。你可以看一下redis 实现的一个简单的分布锁，如果跨库更新失败写日志，标记两个锁定。&lt;/p&gt;
&lt;p&gt;日志这块也非常重要，恢复，对账大部分靠它。。 - 天天&lt;/p&gt;
&lt;p&gt;回: 恩。日志、流水是对账的依据，相当于数据库的redo log，比较重要。 - 张勇&lt;/p&gt;
&lt;p&gt;12. 实时到账还是延迟到账？如果是延迟到账 用一个带事务的queue来做 实时到账 两阶段来 - diwayou@高鹏&lt;/p&gt;
&lt;p&gt;13. 之前简单问过支付宝的朋友，他们用java 写的分布式事物，很强大。java 也有开源组件。 - 天天&lt;/p&gt;
&lt;p&gt;14. 开源的好像都是x/open JTA规范实现的，性能不能保证。- 张勇&lt;/p&gt;
&lt;p&gt;15. 问: 分布式事务的原理是什么 - 陈一回&lt;/p&gt;
&lt;p&gt;回: 这本书，有试读。&lt;a href=&quot;http://item.jd.com/11622772.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://item.jd.com/11622772.html&lt;/a&gt; 里面讲了一些分布式事务的问题&lt;/p&gt;
&lt;p&gt;原理的话可以看看两阶段提交和三阶段提交的资料。 - 张勇&lt;/p&gt;
&lt;p&gt;16. 实际这个就是业务能接受异步的都争取用异步 要不然性能很难保证 - diwayou@高鹏&lt;/p&gt;
&lt;p&gt;17. 这里还有一篇文章：&lt;a href=&quot;http://coolshell.cn/articles/10910.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://coolshell.cn/articles/10910.html&lt;/a&gt; (注: 分布式系统的事务处理) - 张勇&lt;/p&gt;
&lt;p&gt;18. 人手少做个很痛苦，幸好我们有收盘锁定期，还能补补，不然，一步错，步步错，会被骂死。&lt;/p&gt;
&lt;p&gt;做支付老老实实做好测试，别什么敏捷，天天版本的，这不是闹着玩的，我们上线钱前产品临时加了个规则，我们没经验，最后就死在这个规则上。。。 - 天天&lt;/p&gt;
&lt;p&gt;19. 问个细节点的问题，金额是怎么存储的？一般是按分存储还是按元来存储？ - darkmi&lt;/p&gt;
&lt;p&gt;回: 分 - diwayou@高鹏&lt;/p&gt;
&lt;p&gt;回: @diwayou@高鹏  用分是考虑跨项目,跨语言吧. 如果只是php+mysql,mysql用decimal存储,php用bcmath计算小数,结果是正常的 - twin&lt;/p&gt;
&lt;p&gt;回: 嗯 用分容易些 如果用小数 各个语言计算都需要特殊处理 - @diwayou@高鹏&lt;/p&gt;
&lt;p&gt;20. 支付宝TCC示例 &lt;a href=&quot;http://www.docin.com/p-866220638.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.docin.com/p-866220638.html&lt;/a&gt; - diwayou@高鹏&lt;/p&gt;
&lt;p&gt;21. 支付系统的物理架构大概什么样？我看有很多和银行对接的部分，有很多要求，比如有的是win,有的是linux,需要配ftp,有的还要拉专线&lt;/p&gt;
&lt;p&gt;木有支付行业的？ 很想了解啊 - platoli&lt;/p&gt;
&lt;p&gt;22. 银行或第三方支付需要与人行对接，人行在两个银行之间，负责资金转发和清算等&lt;/p&gt;
&lt;p&gt;行内支付系统，负责准备人行接口需要数据，并且处理往账来账，并给核心记账系统提供记账数据&lt;/p&gt;
&lt;p&gt;与人行对接，需要专门支付前置，专门加密等 - 召阳&lt;/p&gt;
&lt;p&gt;23. 移动端支付信息一般用oauth加密传输 - 张静小朋友&lt;/p&gt;
&lt;p&gt;回: oauth加密是啥？ - 唐毅&lt;/p&gt;
&lt;p&gt;回: OAuth 是授权，协议里面包含秘钥验证， - JoJo&lt;/p&gt;
&lt;p&gt;【分享链接】&lt;/p&gt;
&lt;p&gt;1. MySQL索引原理及慢查询优化 &lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5MDYwMjM3Nw==&amp;amp;mid=203600712&amp;amp;idx=1&amp;amp;sn=055c10be105ee20e564efa067b0f195e&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://mp.weixin.qq.com/s?__biz=MjM5MDYwMjM3Nw==&amp;amp;mid=203600712&amp;amp;idx=1&amp;amp;sn=055c10be105ee20e564efa067b0f195e&lt;/a&gt; - 黑夜路人&lt;/p&gt;
&lt;p&gt;2. PHP中实现异步调用多线程程序代码 &lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzAwNjMxMTA5Mw==&amp;amp;mid=210157381&amp;amp;idx=1&amp;amp;sn=adb9928e1b9b3ec9c10cb8b064e6ffef&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://mp.weixin.qq.com/s?__biz=MzAwNjMxMTA5Mw==&amp;amp;mid=210157381&amp;amp;idx=1&amp;amp;sn=adb9928e1b9b3ec9c10cb8b064e6ffef&lt;/a&gt; - 黑夜路人&lt;/p&gt;
&lt;p&gt;注: 他说的都是基于io复用 和多线程没有关系 - 惠新宸&lt;/p&gt;
&lt;p&gt;3. Google基础设施副总裁：容器是计算的未来 &lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MjM5ODM3MzkyNQ==&amp;amp;mid=214930786&amp;amp;idx=1&amp;amp;sn=8806346868f72b590719e456776e029a&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://mp.weixin.qq.com/s?__biz=MjM5ODM3MzkyNQ==&amp;amp;mid=214930786&amp;amp;idx=1&amp;amp;sn=8806346868f72b590719e456776e029a&lt;/a&gt; - 黑夜路人&lt;/p&gt;
&lt;p&gt;4. Unique Key Generate Server https:/&lt;a href=&quot;#32285254&quot; title=&quot;Click to Continue &amp;gt; by DealExpress&quot;&gt; github&lt;img src=&quot;http://cdncache-a.akamaihd.net/items/it/img/arrow-10x10.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;.com/liexusong/ukg - 凹凸曼&lt;/p&gt;
&lt;p&gt;5. PHP unique ID generator https:/&lt;a href=&quot;#11868467&quot; title=&quot;Click to Continue &amp;gt; by DealExpress&quot;&gt; github&lt;img src=&quot;http://cdncache-a.akamaihd.net/items/it/img/arrow-10x10.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;.com/liexusong/ukey - 凹凸曼&lt;/p&gt;
&lt;p&gt;6. PHP 远程 DoS 漏洞深入分析及防护方案 &lt;a href=&quot;http://www.nsfocus.com.cn/report/php_multipart-form-data_remote_dos_vulnerability_analysis_protection.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.nsfocus.com.cn/report/php_multipart-form-data_remote_dos_vulnerability_analysis_protection.pdf&lt;/a&gt; - 袁峰&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;来自黑夜路人技术群讨论分享内容。&quot;&gt;&lt;a href=&quot;#来自黑夜路人技术群讨论分享内容。&quot; class=&quot;headerlink&quot; title=&quot;来自黑夜路人技术群讨论分享内容。&quot;&gt;&lt;/a&gt;来自黑夜路人技术群讨论分享内容。&lt;/h1&gt;&lt;p&gt;【今日话题】&lt;/p&gt;
&lt;p&gt;
    
    </summary>
    
    
      <category term="支付功能" scheme="http://www.dyike.com/tags/%E6%94%AF%E4%BB%98%E5%8A%9F%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>实用工具 &amp; 服务</title>
    <link href="http://www.dyike.com/2015/05/13/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
    <id>http://www.dyike.com/2015/05/13/实用工具/</id>
    <published>2015-05-13T13:10:18.000Z</published>
    <updated>2016-04-15T10:01:25.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;提供给-开发者，创业者，测试人员，产品经理，项目经理使用的实用工具以及服务。欢迎补充。&quot;&gt;&lt;a href=&quot;#提供给-开发者，创业者，测试人员，产品经理，项目经理使用的实用工具以及服务。欢迎补充。&quot; class=&quot;headerlink&quot; title=&quot;提供给 开发者，创业者，测试人员，产品经理，项目经理使用的实用工具以及服务。欢迎补充。&quot;&gt;&lt;/a&gt;提供给 开发者，创业者，测试人员，产品经理，项目经理使用的实用工具以及服务。欢迎补充。&lt;/h3&gt;&lt;p&gt;&lt;div class=&quot;wrapper&quot;&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&quot;site&quot;&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&quot;container&quot;&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&quot;repository-with-sidebar repo-container new-discussion-timeline  &quot;&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;div id=&quot;js-repo-pjax-container&quot; class=&quot;repository-content context-loader-container&quot; data-pjax-container=&quot;&quot;&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;div class=&quot;file&quot;&gt;&lt;/div&gt;&lt;/p&gt;
&lt;div id=&quot;readme&quot; class=&quot;blob instapaper_body&quot;&gt;

&lt;ol&gt;
&lt;li&gt;&lt;h3 id=&quot;http-www-testin-cn-免费移动App真机云测试平台&quot;&gt;&lt;a href=&quot;#http-www-testin-cn-免费移动App真机云测试平台&quot; class=&quot;headerlink&quot; title=&quot;http://www.testin.cn/ 免费移动App真机云测试平台&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.testin.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.testin.cn/&lt;/a&gt; 免费移动App真机云测试平台&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;http-www-mikecrm-com-免费的信息收集工具&quot;&gt;&lt;a href=&quot;#http-www-mikecrm-com-免费的信息收集工具&quot; class=&quot;headerlink&quot; title=&quot;http://www.mikecrm.com/ 免费的信息收集工具&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.mikecrm.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.mikecrm.com/&lt;/a&gt; 免费的信息收集工具&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;https-www-jinshuju-net-免费强大的表单设计、数据收集工具&quot;&gt;&lt;a href=&quot;#https-www-jinshuju-net-免费强大的表单设计、数据收集工具&quot; class=&quot;headerlink&quot; title=&quot;https://www.jinshuju.net/ 免费强大的表单设计、数据收集工具&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.jinshuju.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.jinshuju.net/&lt;/a&gt; 免费强大的表单设计、数据收集工具&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;http-mob-com-sms-免费的短信验证码SDK&quot;&gt;&lt;a href=&quot;#http-mob-com-sms-免费的短信验证码SDK&quot; class=&quot;headerlink&quot; title=&quot;http://mob.com/sms 免费的短信验证码SDK&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://mob.com/sms&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://mob.com/sms&lt;/a&gt; 免费的短信验证码SDK&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;https-meiqia-com-美恰-实时在线的客户服务工具&quot;&gt;&lt;a href=&quot;#https-meiqia-com-美恰-实时在线的客户服务工具&quot; class=&quot;headerlink&quot; title=&quot;https://meiqia.com/ 美恰 实时在线的客户服务工具&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://meiqia.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://meiqia.com/&lt;/a&gt; 美恰 实时在线的客户服务工具&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;http-www-jiathis-com-JiaThis-社会化分享平台&quot;&gt;&lt;a href=&quot;#http-www-jiathis-com-JiaThis-社会化分享平台&quot; class=&quot;headerlink&quot; title=&quot;http://www.jiathis.com/ JiaThis 社会化分享平台&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.jiathis.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jiathis.com/&lt;/a&gt; JiaThis 社会化分享平台&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;https-trello-com-Trello-轻量级团队流程协作管理平台&quot;&gt;&lt;a href=&quot;#https-trello-com-Trello-轻量级团队流程协作管理平台&quot; class=&quot;headerlink&quot; title=&quot;https://trello.com/ Trello 轻量级团队流程协作管理平台&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://trello.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://trello.com/&lt;/a&gt; Trello 轻量级团队流程协作管理平台&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;https-modao-io-墨刀-免费在线原型工具&quot;&gt;&lt;a href=&quot;#https-modao-io-墨刀-免费在线原型工具&quot; class=&quot;headerlink&quot; title=&quot;https://modao.io/ 墨刀 免费在线原型工具&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://modao.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://modao.io/&lt;/a&gt; 墨刀 免费在线原型工具&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;https-popapp-in-POP-快速制作可交互纸面原型&quot;&gt;&lt;a href=&quot;#https-popapp-in-POP-快速制作可交互纸面原型&quot; class=&quot;headerlink&quot; title=&quot;https://popapp.in/ POP 快速制作可交互纸面原型&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://popapp.in/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://popapp.in/&lt;/a&gt; POP 快速制作可交互纸面原型&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;http-www-sojump-com-问卷星-免费调查问卷平台&quot;&gt;&lt;a href=&quot;#http-www-sojump-com-问卷星-免费调查问卷平台&quot; class=&quot;headerlink&quot; title=&quot;http://www.sojump.com/ 问卷星 免费调查问卷平台&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.sojump.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.sojump.com/&lt;/a&gt; 问卷星 免费调查问卷平台&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;http-fir-im-fir-IM-免费应用发布平台（android、iOS）&quot;&gt;&lt;a href=&quot;#http-fir-im-fir-IM-免费应用发布平台（android、iOS）&quot; class=&quot;headerlink&quot; title=&quot;http://fir.im/ fir.IM 免费应用发布平台（android、iOS）&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://fir.im/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://fir.im/&lt;/a&gt; fir.IM 免费应用发布平台（android、iOS）&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;http-www-cloud7-com-cn-云起-快速轻应用创建平台（微信公众号、百度直达号）&quot;&gt;&lt;a href=&quot;#http-www-cloud7-com-cn-云起-快速轻应用创建平台（微信公众号、百度直达号）&quot; class=&quot;headerlink&quot; title=&quot;http://www.cloud7.com.cn/ 云起 快速轻应用创建平台（微信公众号、百度直达号）&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.cloud7.com.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cloud7.com.cn/&lt;/a&gt; 云起 快速轻应用创建平台（微信公众号、百度直达号）&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;http-eqxiu-com-易企秀-免费移动场景应用制作&quot;&gt;&lt;a href=&quot;#http-eqxiu-com-易企秀-免费移动场景应用制作&quot; class=&quot;headerlink&quot; title=&quot;http://eqxiu.com/ 易企秀 免费移动场景应用制作&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://eqxiu.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://eqxiu.com/&lt;/a&gt; 易企秀 免费移动场景应用制作&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;http-youzan-com-有赞-免费微店、微商城，完整的微店商解决方案&quot;&gt;&lt;a href=&quot;#http-youzan-com-有赞-免费微店、微商城，完整的微店商解决方案&quot; class=&quot;headerlink&quot; title=&quot;http://youzan.com/ 有赞 免费微店、微商城，完整的微店商解决方案&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://youzan.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://youzan.com/&lt;/a&gt; 有赞 免费微店、微商城，完整的微店商解决方案&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;http-www-eteams-cn-团队、办公协作空间&quot;&gt;&lt;a href=&quot;#http-www-eteams-cn-团队、办公协作空间&quot; class=&quot;headerlink&quot; title=&quot;http://www.eteams.cn/团队、办公协作空间&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.eteams.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.eteams.cn/&lt;/a&gt;团队、办公协作空间&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;http-www-duiba-com-cn-兑吧-专业的积分兑换服务平台（提现、话费、抽奖、礼品）&quot;&gt;&lt;a href=&quot;#http-www-duiba-com-cn-兑吧-专业的积分兑换服务平台（提现、话费、抽奖、礼品）&quot; class=&quot;headerlink&quot; title=&quot;http://www.duiba.com.cn/ 兑吧 专业的积分兑换服务平台（提现、话费、抽奖、礼品）&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.duiba.com.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.duiba.com.cn/&lt;/a&gt; 兑吧 专业的积分兑换服务平台（提现、话费、抽奖、礼品）&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;http-www-easemob-com-环信-移动IM解决方案&quot;&gt;&lt;a href=&quot;#http-www-easemob-com-环信-移动IM解决方案&quot; class=&quot;headerlink&quot; title=&quot;http://www.easemob.com/ 环信 移动IM解决方案&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.easemob.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.easemob.com/&lt;/a&gt; 环信 移动IM解决方案&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;https-leancloud-cn-LeanCloud-应用开发一站式解决方案提供商：数据存储、用户管理、消息推送、应用统计、社交分享、实时聊天等服务&quot;&gt;&lt;a href=&quot;#https-leancloud-cn-LeanCloud-应用开发一站式解决方案提供商：数据存储、用户管理、消息推送、应用统计、社交分享、实时聊天等服务&quot; class=&quot;headerlink&quot; title=&quot;https://leancloud.cn/ LeanCloud 应用开发一站式解决方案提供商：数据存储、用户管理、消息推送、应用统计、社交分享、实时聊天等服务&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://leancloud.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://leancloud.cn/&lt;/a&gt; LeanCloud 应用开发一站式解决方案提供商：数据存储、用户管理、消息推送、应用统计、社交分享、实时聊天等服务&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;http-www-rongcloud-cn-融云-专注为开发者提供-IM-云服务&quot;&gt;&lt;a href=&quot;#http-www-rongcloud-cn-融云-专注为开发者提供-IM-云服务&quot; class=&quot;headerlink&quot; title=&quot;http://www.rongcloud.cn/ 融云 专注为开发者提供 IM 云服务&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.rongcloud.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.rongcloud.cn/&lt;/a&gt; 融云 专注为开发者提供 IM 云服务&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;http-chuye-cloud7-com-cn-初页-微信H5海报创作神器&quot;&gt;&lt;a href=&quot;#http-chuye-cloud7-com-cn-初页-微信H5海报创作神器&quot; class=&quot;headerlink&quot; title=&quot;http://chuye.cloud7.com.cn/ 初页 微信H5海报创作神器&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://chuye.cloud7.com.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://chuye.cloud7.com.cn/&lt;/a&gt; 初页 微信H5海报创作神器&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;http-weixin-drip-im-水滴-轻巧、智能的微信公众号管理平台&quot;&gt;&lt;a href=&quot;#http-weixin-drip-im-水滴-轻巧、智能的微信公众号管理平台&quot; class=&quot;headerlink&quot; title=&quot;http://weixin.drip.im/ 水滴 轻巧、智能的微信公众号管理平台&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://weixin.drip.im/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://weixin.drip.im/&lt;/a&gt; 水滴 轻巧、智能的微信公众号管理平台&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;http-xiumi-us-秀米-微信公众号排版利器&quot;&gt;&lt;a href=&quot;#http-xiumi-us-秀米-微信公众号排版利器&quot; class=&quot;headerlink&quot; title=&quot;http://xiumi.us/ 秀米 微信公众号排版利器&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://xiumi.us/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://xiumi.us/&lt;/a&gt; 秀米 微信公众号排版利器&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;https-tower-im-网上办公室：管理项目和团队&quot;&gt;&lt;a href=&quot;#https-tower-im-网上办公室：管理项目和团队&quot; class=&quot;headerlink&quot; title=&quot;https://tower.im/ 网上办公室：管理项目和团队&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://tower.im/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://tower.im/&lt;/a&gt; 网上办公室：管理项目和团队&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;http-next-36kr-com-发现热门APP&quot;&gt;&lt;a href=&quot;#http-next-36kr-com-发现热门APP&quot; class=&quot;headerlink&quot; title=&quot;http://next.36kr.com/ 发现热门APP&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://next.36kr.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://next.36kr.com/&lt;/a&gt; 发现热门APP&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;http-www-qiniu-com-七牛-提供云存储服务、分发加速、数据处理等服务&quot;&gt;&lt;a href=&quot;#http-www-qiniu-com-七牛-提供云存储服务、分发加速、数据处理等服务&quot; class=&quot;headerlink&quot; title=&quot;http://www.qiniu.com/ 七牛 提供云存储服务、分发加速、数据处理等服务&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.qiniu.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.qiniu.com/&lt;/a&gt; 七牛 提供云存储服务、分发加速、数据处理等服务&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;http-www-devstore-cn-移动互联网运营解决方案整合平台&quot;&gt;&lt;a href=&quot;#http-www-devstore-cn-移动互联网运营解决方案整合平台&quot; class=&quot;headerlink&quot; title=&quot;http://www.devstore.cn/ 移动互联网运营解决方案整合平台&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.devstore.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.devstore.cn/&lt;/a&gt; 移动互联网运营解决方案整合平台&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;https-www-teambition-com-简单、高效的项目协作工具&quot;&gt;&lt;a href=&quot;#https-www-teambition-com-简单、高效的项目协作工具&quot; class=&quot;headerlink&quot; title=&quot;https://www.teambition.com/ 简单、高效的项目协作工具&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.teambition.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.teambition.com/&lt;/a&gt; 简单、高效的项目协作工具&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;http-www-apicloud-com-“云端一体”的移动应用云服务提供商&quot;&gt;&lt;a href=&quot;#http-www-apicloud-com-“云端一体”的移动应用云服务提供商&quot; class=&quot;headerlink&quot; title=&quot;http://www.apicloud.com/ “云端一体”的移动应用云服务提供商&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.apicloud.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.apicloud.com/&lt;/a&gt; “云端一体”的移动应用云服务提供商&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;http-www-getui-com-个推-手机消息推送解决方案提供商&quot;&gt;&lt;a href=&quot;#http-www-getui-com-个推-手机消息推送解决方案提供商&quot; class=&quot;headerlink&quot; title=&quot;http://www.getui.com/ 个推 手机消息推送解决方案提供商&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.getui.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.getui.com/&lt;/a&gt; 个推 手机消息推送解决方案提供商&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;https-pingxx-com-Ping-是为移动端量身打造的下一代支付系统，简单接入，多种支付渠道。&quot;&gt;&lt;a href=&quot;#https-pingxx-com-Ping-是为移动端量身打造的下一代支付系统，简单接入，多种支付渠道。&quot; class=&quot;headerlink&quot; title=&quot;https://pingxx.com/ Ping++是为移动端量身打造的下一代支付系统，简单接入，多种支付渠道。&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://pingxx.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://pingxx.com/&lt;/a&gt; Ping++是为移动端量身打造的下一代支付系统，简单接入，多种支付渠道。&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;http-apistore-baidu-com-为开发者提供最全面的API服务&quot;&gt;&lt;a href=&quot;#http-apistore-baidu-com-为开发者提供最全面的API服务&quot; class=&quot;headerlink&quot; title=&quot;http://apistore.baidu.com/ 为开发者提供最全面的API服务&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://apistore.baidu.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://apistore.baidu.com/&lt;/a&gt; 为开发者提供最全面的API服务&lt;/h3&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;###&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;h3 id=&quot;http-samllpdf-com-cn-针对PDF问题解决方案&quot;&gt;&lt;a href=&quot;#http-samllpdf-com-cn-针对PDF问题解决方案&quot; class=&quot;headerlink&quot; title=&quot;http://samllpdf.com/cn/ 针对PDF问题解决方案&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://samllpdf.com/cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://samllpdf.com/cn/&lt;/a&gt; 针对PDF问题解决方案&lt;/h3&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;提供给-开发者，创业者，测试人员，产品经理，项目经理使用的实用工具以及服务。欢迎补充。&quot;&gt;&lt;a href=&quot;#提供给-开发者，创业者，测试人员，产品经理，项目经理使用的实用工具以及服务。欢迎补充。&quot; class=&quot;headerlink&quot; title=&quot;提供给 开发
    
    </summary>
    
    
      <category term="PM 创业者 工具 服务 我的收藏" scheme="http://www.dyike.com/tags/PM-%E5%88%9B%E4%B8%9A%E8%80%85-%E5%B7%A5%E5%85%B7-%E6%9C%8D%E5%8A%A1-%E6%88%91%E7%9A%84%E6%94%B6%E8%97%8F/"/>
    
  </entry>
  
</feed>
